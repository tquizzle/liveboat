{"id":"2k6wXud2N91xpf4PwnSfo4j5WSuTNX5k","title":"Tech News - Last 2 days","displayTitle":"Tech News - Last 2 days","url":"","feedLink":"","isQuery":true,"isEmpty":false,"isHidden":false,"itemCount":83,"items":[{"title":"How an Electrical Fire Shut Down Heathrow and Upended Global Air Travel","url":"https://tech.slashdot.org/story/25/03/22/010205/how-an-electrical-fire-shut-down-heathrow-and-upended-global-air-travel?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742626800,"author":"msmash","guid":223,"unread":true,"content":"London's Heathrow Airport resumed operations late Friday after an electrical fire at a nearby substation forced a full-day closure, causing global travel chaos with hundreds of canceled flights and thousands of stranded passengers. The explosion at a Hayes substation 1.5 miles from the airport knocked out power early Thursday, requiring 70 firefighters to battle a blaze in a transformer containing 25,000 liters of cooling oil. \n\nDespite backup generators, Europe's busiest airport couldn't maintain normal operations, forcing flights to divert to airports across Europe and as far as Bangor, Maine. \"Contingencies of certain sizes we cannot guard ourselves against 100%,\" Heathrow CEO Thomas Woldbye told the BBC. \"This is as big as it gets for our airport.\" British Airways, which planned to carry 100,000 passengers Friday, prioritized long-haul flights to Australia, Brazil and South Africa when operations resumed after 4 p.m.","contentLength":934,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Cloudflare Turns AI Against Itself With Endless Maze of Irrelevant Facts","url":"https://tech.slashdot.org/story/25/03/22/014247/cloudflare-turns-ai-against-itself-with-endless-maze-of-irrelevant-facts?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742617800,"author":"msmash","guid":222,"unread":true,"content":"Web infrastructure provider Cloudflare unveiled \"AI Labyrinth\" this week, a feature designed to thwart unauthorized AI data scraping by feeding bots realistic but irrelevant content instead of blocking them outright. The system lures crawlers into a \"maze\" of AI-generated pages containing neutral scientific information, deliberately wasting computing resources of those attempting to collect training data for language models without permission. \n\n\"When we detect unauthorized crawling, rather than blocking the request, we will link to a series of AI-generated pages that are convincing enough to entice a crawler to traverse them,\" Cloudflare explained. The company reports AI crawlers generate over 50 billion requests to their network daily, comprising nearly 1% of all web traffic they process. The feature is available to all Cloudflare customers, including those on free plans. This approach marks a shift from traditional protection methods, as Cloudflare claims blocking bots sometimes alerts operators they've been detected. The false links contain meta directives to prevent search engine indexing while remaining attractive to data-scraping bots.","contentLength":1160,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Amazon CEO Criticizes Manager Fiefdoms and Stresses the Need For 'Meritocracy'","url":"https://slashdot.org/story/25/03/22/018254/amazon-ceo-criticizes-manager-fiefdoms-and-stresses-the-need-for-meritocracy?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742607900,"author":"msmash","guid":221,"unread":true,"content":"Amazon CEO Andy Jassy is pushing to cut bureaucracy by reducing management layers, according to a recording of a recent internal all-hands meeting obtained by Business Insider. Amazon plans to increase the ratio of individual contributors to managers by 15% by March-end, a process the company says is now complete and affected a \"relatively small subset of employees.\" \n\n\"The way to get ahead at Amazon is not to go accumulate a giant team and fiefdom,\" Jassy told employees, stressing that successful leaders \"get the most done with the least amount of resources.\" Jassy has established a \"No Bureaucracy\" email alias that has received over a thousand suggestions, leading to more than 375 changes aimed at speeding operations. \"It's a meritocracy,\" Jassy said, urging employees to \"move fast and act like owners.\"","contentLength":816,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Director Charged With Netflix Fraud After Splurging on Crypto Instead of Finishing Sci-fi Series","url":"https://yro.slashdot.org/story/25/03/21/2343252/director-charged-with-netflix-fraud-after-splurging-on-crypto-instead-of-finishing-sci-fi-series?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742605200,"author":"msmash","guid":220,"unread":true,"content":"Hollywood filmmaker Carl Erik Rinsch has been charged with defrauding Netflix of $11 million after allegedly misusing funds intended for an unfinished science fiction series, federal prosecutors said. \n\nRinsch, 47, was arrested in West Hollywood this week on charges of wire fraud, money laundering and unlawful monetary transactions that could result in decades of imprisonment if convicted. The FBI and Acting U.S. Attorney for the Southern District of New York allege Rinsch diverted funds meant for his series \"Conquest\" to speculate on cryptocurrency, stay in luxury hotels and purchase high-end items including five Rolls-Royces and a Ferrari. \n\nNetflix had paid Rinsch $44 million between 2018 and 2019 for the science fiction project about an artificial humanlike species. Prosecutors say he then requested an additional $11 million but never completed the production. An arbitrator ruled in Netflix's favor last year, ordering Rinsch to pay the company $11.8 million. Rinsch appeared in federal court with shackles and posted a $100,000 bond.","contentLength":1051,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Meta settles UK ‘right to object to ad-tracking’ lawsuit by agreeing not to track plaintiff","url":"https://techcrunch.com/2025/03/21/meta-settles-u-k-right-to-object-to-ad-tracking-lawsuit-by-agreeing-not-to-track-plaintiff/","date":1742601660,"author":"Natasha Lomas","guid":407,"unread":true,"content":"<article>A human rights campaigner, Tanya O’Carroll, has succeeded in forcing social media giant Meta not to use her data for targeted advertising. The agreement is contained in a settlement to an individual challenge she lodged against Meta’s tracking and profiling back in 2022. O’Carroll had argued that a legal right to object to the use […]</article>","contentLength":344,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Apple Sued For False Advertising Over Apple Intelligence","url":"https://apple.slashdot.org/story/25/03/21/2252226/apple-sued-for-false-advertising-over-apple-intelligence?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742600700,"author":"msmash","guid":219,"unread":true,"content":"Apple has been hit with a federal lawsuit claiming that the company's promotion of now-delayed Apple Intelligence features constituted false advertising and unfair competition. From a report: The suit, filed Wednesday in U.S. District Court in San Jose, seeks class action status and unspecified financial damages on behalf of those who purchased Apple Intelligence-capable iPhones and other devices. \"Apple's advertisements saturated the internet, television, and other airwaves to cultivate a clear and reasonable consumer expectation that these transformative features would be available upon the iPhone's release,\" the suit reads. \n\n\"This drove unprecedented excitement in the market, even for Apple, as the company knew it would, and as part of Apple's ongoing effort to convince consumers to upgrade at a premium price and to distinguish itself from competitors deemed to be winning the AI-arms race. [...] Contrary to Defendant's claims of advanced AI capabilities, the Products offered a significantly limited or entirely absent version of Apple Intelligence, misleading consumers about its actual utility and performance. Worse yet, Defendant promoted its Products based on these overstated AI capabilities, leading consumers to believe they were purchasing a device with features that did not exist or were materially misrepresented.\"","contentLength":1344,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Wine 10.4 Brings More Direct3D To Vulkan Video Handling, Continued Bluetooth Driver Work","url":"https://www.phoronix.com/news/Wine-10.4-Released","date":1742597662,"author":"Michael Larabel","guid":783,"unread":true,"content":"<article>Wine 10.4 is out tonight as the newest bi-weekly development release of this open-source software for running Windows games and applications on Linux, macOS, and other platforms...</article>","contentLength":180,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Meta Spotted Testing AI-Generated Comments on Instagram","url":"https://tech.slashdot.org/story/25/03/21/2246239/meta-spotted-testing-ai-generated-comments-on-instagram?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742597160,"author":"msmash","guid":218,"unread":true,"content":"Meta is testing an AI feature that generates comment suggestions for Instagram posts. Users with access to the test see a pencil icon beside the comment field that activates \"Write with Meta AI.\" The system analyzes photos before offering three comment suggestions, which users can refresh for alternatives. For a photo showing someone smiling with a thumbs-up in their living room, suggested comments include \"Cute living room setup\" and \"Love the cozy atmosphere.\"","contentLength":466,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Anduril might build a weapons factory in the UK","url":"https://techcrunch.com/2025/03/21/anduril-might-build-a-weapons-factory-in-the-uk/","date":1742593905,"author":"Charles Rollet","guid":406,"unread":true,"content":"<article>Anduril might build a factory in the U.K. as it expands beyond U.S. defense contracts.</article>","contentLength":86,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Cloudflare turns AI against itself with endless maze of irrelevant facts","url":"https://arstechnica.com/ai/2025/03/cloudflare-turns-ai-against-itself-with-endless-maze-of-irrelevant-facts/","date":1742591675,"author":"Benj Edwards","guid":320,"unread":true,"content":"<p>On Wednesday, web infrastructure provider Cloudflare announced a new feature called \"<a href=\"https://blog.cloudflare.com/ai-labyrinth/\">AI Labyrinth</a>\" that aims to combat unauthorized AI data scraping by serving fake AI-generated content to bots. The tool will attempt to thwart AI companies that crawl websites without permission to collect training data for large language models that power AI assistants like <a href=\"https://arstechnica.com/information-technology/2023/11/chatgpt-was-the-spark-that-lit-the-fire-under-generative-ai-one-year-ago-today/\">ChatGPT</a>.</p><p>Cloudflare, founded in 2009, is probably best known as a company that <a href=\"https://en.wikipedia.org/wiki/Cloudflare\">provides</a> infrastructure and security services for websites, particularly protection against <a href=\"https://en.wikipedia.org/wiki/DDoS_mitigation\">distributed denial-of-service</a> (DDoS) attacks and other malicious traffic.</p><p>Instead of simply blocking bots, Cloudflare's new system lures them into a \"maze\" of realistic-looking but irrelevant pages, wasting the crawler's computing resources. The approach is a notable shift from the standard block-and-defend strategy used by most website protection services. Cloudflare says blocking bots sometimes backfires because it alerts the crawler's operators that they've been detected.</p>","contentLength":1008,"flags":null,"enclosureUrl":"https://cdn.arstechnica.net/wp-content/uploads/2025/03/robot_maze_1-1152x648.jpg","enclosureMime":"","commentsUrl":null},{"title":"Meta has revenue sharing agreements with Llama AI model hosts, filing reveals","url":"https://techcrunch.com/2025/03/21/meta-has-revenue-sharing-agreements-with-llama-ai-model-hosts-filing-reveals/","date":1742589653,"author":"Kyle Wiggers","guid":405,"unread":true,"content":"<article>In a blog post last July, Meta CEO Mark Zuckerberg said that “selling access” to Meta’s openly available Llama AI models “isn’t [Meta’s] business model.” Yet Meta does make at least some money from Llama through revenue-sharing agreements, according to a newly unredacted court filing. The filing, submitted by attorneys for the plaintiffs in the […]</article>","contentLength":366,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How BYD plans to make EV charging as fast as filling a gas tank","url":"https://techcrunch.com/2025/03/21/how-byd-plans-to-make-ev-charging-as-fast-as-filling-a-gas-tank/","date":1742589030,"author":"Tim De Chant","guid":404,"unread":true,"content":"<article>What we found mostly supports the auto makers claims, with a few caveats.</article>","contentLength":73,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Valve removes video game demo suspected of being malware","url":"https://techcrunch.com/2025/03/21/valve-removes-video-game-demo-suspected-of-being-malware/","date":1742587134,"author":"Lorenzo Franceschi-Bicchierai","guid":403,"unread":true,"content":"<article>Valve removed a video game called Sniper: Phantom's Resolution from Steam after users reported that its free demo contained malware. </article>","contentLength":133,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Anthropic’s new AI search feature digs through the web for answers","url":"https://arstechnica.com/ai/2025/03/anthropics-new-ai-search-feature-digs-through-the-web-for-answers/","date":1742584136,"author":"Benj Edwards","guid":319,"unread":true,"content":"<p>On Thursday, Anthropic <a href=\"https://www.anthropic.com/news/web-search\">introduced</a> web search capabilities for its AI assistant Claude, enabling the assistant to access current information online. Previously, the latest AI model that powers Claude could only rely on data absorbed during its neural network training process, having a \"knowledge cutoff\" of October 2024.</p><p>Claude's web search is currently available in feature preview for paid users in the United States, with plans to expand to free users and additional countries in the future. After users enable the feature in their profile settings, Claude will automatically determine when to use web search to answer a query or find more recent information.</p><p>The new feature works with <a href=\"https://arstechnica.com/ai/2025/02/claude-3-7-sonnet-debuts-with-extended-thinking-to-tackle-complex-problems/\">Claude 3.7 Sonnet</a> and requires a paid subscription. The addition brings Claude in line with competitors like Microsoft Copilot and ChatGPT, which already offer similar functionality. ChatGPT <a href=\"https://arstechnica.com/information-technology/2023/03/chatgpt-gets-eyes-and-ears-with-plugins-that-can-interface-ai-with-the-world/\">first added</a> the ability to grab web search results as a plugin in March 2023, so this new feature is a long time coming.</p>","contentLength":999,"flags":null,"enclosureUrl":"https://cdn.arstechnica.net/wp-content/uploads/2025/03/anthropoc_search-1152x648.jpg","enclosureMime":"","commentsUrl":null},{"title":"OpenAI Study Finds Links Between ChatGPT Use and Loneliness","url":"https://slashdot.org/story/25/03/21/1851233/openai-study-finds-links-between-chatgpt-use-and-loneliness?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742583600,"author":"msmash","guid":217,"unread":true,"content":"Higher use of chatbots like ChatGPT may correspond with increased loneliness and less time spent socializing with other people, according to new research from OpenAI in partnership with the Massachusetts Institute of Technology. From a report: Those who spent more time typing or speaking with ChatGPT each day tended to report higher levels of emotional dependence on, and problematic use of, the chatbot, as well as heightened levels of loneliness, according to research released Friday. The findings were part of a pair of studies conducted by researchers at the two organizations and have not been peer reviewed. \n\nSan Francisco-based OpenAI sees the new studies as a way to get a better sense of how people interact with, and are affected by, its popular chatbot. \"Some of our goals here have really been to empower people to understand what their usage can mean and do this work to inform responsible design,\" said Sandhini Agarwal, who heads OpenAI's trustworthy AI team and co-authored the research. To conduct the studies, the researchers followed nearly 1,000 people for a month.","contentLength":1089,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AMD Announces AITER For ROCm To Help Boost AI Performance","url":"https://www.phoronix.com/news/AMD-AITER-AI-Performance-ROCm","date":1742583206,"author":"Michael Larabel","guid":782,"unread":true,"content":"<article>AMD has been on a software / container / documentation spree recently around ROCm and today are announcing another software addition to the ROCm portfolio: AITER...</article>","contentLength":164,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Monica Technologies Simplifies Crypto To Naira Conversions","url":"https://hackernoon.com/monica-technologies-simplifies-crypto-to-naira-conversions?source=rss","date":1742582947,"author":"BTCWire","guid":670,"unread":true,"content":"<p>Lagos, Nigeria — Monica Technologies, a Nigerian fintech startup, is shooting for the stars as a skyrocketing platform that converts cryptocurrencies to naira at high speed.</p><p>\\\nFocusing on reducing friction and improving reliability regarding trading, the high-efficiency platform tackles an issue faced by many content creators and earners in cryptocurrencies: the fast and safe conversion of digital assets into local currency.</p><p>Monica Technologies is a remarkable platform that converts users' USDT into naira in less than one minute on average, despite the transaction speed everyone expects in the digital financial age.</p><p>\\\nAnd it isn't just tooting its own horn; its speed has been tested in real time and can be seen streamed online. With such performance, the user experience improves significantly, and Monica Technologies also rises to prominence in Nigeria’s fintech space.</p><p>\\\nMonica Technologies is entirely self-funded, unlike many startups that require outside funding to start operations. They have been able to focus on building their service simply and investor-free. A primary feature of their service is the users' need for speed and security, ensuring that when anyone is changing their crypto to naira, they do so with confidence.</p><p>\\\nTechnology and Security at the Core</p><p>Monica Technologies incorporates robust technology built into its platform works on the rich, user-friendly, fast conversion process.</p><p>\\\nIt guarantees that every transaction is securely processed, alleviating the most pressing issue of access to security in digital financial transactions. This strong base has  given the startup a growing audience and laid a foundation for future expansion.</p><h3>Driving Cryptocurrency Adoption Through Efficient Conversions</h3><p>Amid increasing worldwide interest in cryptocurrencies, platforms like Monica Technologies have become paramount for efficient conversion solutions.</p><p>\\\nTheir platform powers the everyday financial transactions of individuals and creators and drives the broader adoption of digital currencies in everyday commerce.</p><h3>Future Outlook and Expansion Plans</h3><p>Although Monica Technologies is not actively seeking new investors at the moment, its market traction and potential make it a noteworthy contender in the fintech sector. The startup’s ability to scale operations while maintaining a robust business model is a testament to their strategic planning and market foresight.</p><p>\\n Looking ahead, Monica Technologies plans to refine its technology further and broaden its service offerings. Committed to staying at the forefront of the fintech industry, the company aims to continuously set new standards for speed and security, challenging other industry players to meet these benchmarks.</p><p>:::tip\nThis story was distributed as a release by Btcwire under HackerNoon’s Business Blogging Program. Learn more about the program&nbsp;</p>","contentLength":2868,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"TOMI Launches The First AI Voice Assistant Embedded Within a Crypto Wallet","url":"https://hackernoon.com/tomi-launches-the-first-ai-voice-assistant-embedded-within-a-crypto-wallet?source=rss","date":1742582393,"author":"BTCWire","guid":669,"unread":true,"content":"<p>March 21, 2025 — TOMI, the Web3 infrastructure project creating a decentralized alternative internet ecosystem, introduces the first AI-powered voice assistant for a Web3 wallet, which will enable the expedition of a variety of routine crypto-related tasks.</p><p>\\\nThe AI assistant adds a layer of automation and personal guidance to the , providing convenience, efficiency, and enhanced accessibility. With this added feature to the TOMI Wallet, users can now send funds and soon will be able to swap tokens, check prices and token details, monitor balances, and view transaction history via voice commands. The TOMI wallet, with the AI voice assistant, is available to download for  and .</p><p>\\\nAs AI features increasingly find their way into crypto platforms, products, and services, there is rising interest in utilizing advanced AI technologies like natural language processing (NLP) and automatic speech recognition (ASR) within Web3 wallets.</p><p>\\\nProgress is being made to integrate AI voice commands into crypto wallets, but the industry hasn’t yet provided Web3 users with an all-encompassing solution. For example, Tether’s  is expected to provide enhanced security features, but it's only in the developmental stage and only caters to Bitcoin holders.</p><p>\\\nTOMI’s new AI-powered voice assistant provides hands-free convenience to users, allowing them to engage with digital assets as they go about their daily routines. The AI voice assistant enables faster, mistake-free onboarding with its AI-driven step-by-step direction and contextual understanding, reducing the possibility of sending tokens to the wrong address or selecting the wrong network.</p><p>\\\nBy managing crypto through TOMI’s intuitive voice interface, users can save time by eliminating the need to navigate multiple screens. The TOMI Wallet’s AI voice assistant is the product of a technical collaboration with , a platform for creating advanced AI agents, who built and integrated the feature.</p><p>\\\nThe TOMI Wallet’s voice assistant integrates with users’ contacts, offering them the convenience of addressing a contact by name while the AI links them to the right address on the correct network. In the future, TOMI will extend these AI-powered capabilities to manage more aspects of the user experience across TOMI’s broader ecosystem. This could include identity verification, assistance engaging with DeFi protocols, handling NFT transactions, and more.</p><blockquote><p>“By embedding AI at the core of the TOMI Wallet, we aim to provide a more unified, intuitive, and smooth user experience,” says Moshe Hogeg, Founder and senior consultant at TOMI. “Soon, our users will be able to not only send crypto through AI voice assistant, but also check market data, interact with DeFi or NFT features, and more. As the first true AI voice assistant to be integrated into a crypto wallet, we aim to redefine the standard for crypto wallets going forward by emphasizing the UX.”</p></blockquote><p>TOMI is on a mission to increase digital freedom and build a more democratic and decentralized internet - where users have full control over their data, transactions, and communications.</p><p>\\\nThrough TOMI, messaging and crypto payments come together, enabling seamless intuitive financial interactions. By making transactions as easy as chatting, tomi is redefining how people connect and transact in the digital age. For more information, visit: </p><p>:::tip\nThis story was distributed as a release by Btcwire under HackerNoon’s Business Blogging Program. Learn more about the program&nbsp;</p>","contentLength":3513,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"DeepSeek: Everything you need to know about the AI chatbot app","url":"https://techcrunch.com/2025/03/21/deepseek-everything-you-need-to-know-about-the-ai-chatbot-app/","date":1742582280,"author":"Kyle Wiggers","guid":402,"unread":true,"content":"<article>DeepSeek has gone viral. Chinese AI lab DeepSeek broke into the mainstream consciousness this week after&nbsp;its chatbot app rose to the top of the Apple App Store charts (and Google Play, as well). DeepSeek’s AI models, which were trained using compute-efficient techniques,&nbsp;have led Wall Street analysts&nbsp;—&nbsp;and technologists&nbsp;— to question whether the U.S. can maintain its […]</article>","contentLength":386,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Microsoft Proposes \"Hornet\" Security Module For The Linux Kernel","url":"https://www.phoronix.com/news/Microsoft-Hornet-Linux-LSM","date":1742581292,"author":"Michael Larabel","guid":781,"unread":true,"content":"<article>Microsoft's newest open-source contribution to the Linux kernel being proposed is... Hornet, a Linux security module (LSM) for providing signature verification of eBPF programs...</article>","contentLength":179,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"US Removes Tornado Cash Sanctions","url":"https://news.slashdot.org/story/25/03/21/1611253/us-removes-tornado-cash-sanctions?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742580000,"author":"msmash","guid":216,"unread":true,"content":"The U.S. Treasury Department's sanctions watchdog removed cryptocurrency mixing tool Tornado Cash from its global blacklist on Friday, following a federal appeals court ruling last November that the Office of Foreign Asset Control couldn't sanction its smart contracts. Despite the delisting of over 100 Ethereum addresses from the Specially Designated Nationals list, Treasury Secretary Scott Bessent emphasized continuing concerns about North Korea's digital asset theft operations. \n\n\"We remain deeply concerned about the significant state-sponsored hacking and money laundering campaign aimed at stealing, acquiring, and deploying digital assets for the Democratic People's Republic of Korea,\" Treasury stated. Roman Storm, Tornado Cash co-founder, still faces a July criminal trial for his alleged development role. A Treasury court filing Monday had warned that completely lifting sanctions could have \"significantly disruptive consequences for national security.\"","contentLength":970,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"ReactOS 0.4.15 Released For This \"Open-Source Windows\" OS With Tons Of Enhancements","url":"https://www.phoronix.com/news/ReactOS-0.4.15-Released","date":1742577155,"author":"Michael Larabel","guid":780,"unread":true,"content":"<article>It's been over three years since the last ReactOS open-source operating system release for this platform working on API/ABI compatibility with Microsoft Windows. Today ReactOS 0.4.15 was finally published...</article>","contentLength":207,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"TechCrunch has, yes, personal news!","url":"https://techcrunch.com/2025/03/21/techcrunch-has-personal-news/","date":1742577116,"author":"Connie Loizos","guid":401,"unread":true,"content":"<article>If you haven’t heard the news, TechCrunch has a shiny new home. After years under the ownership of Yahoo — which, in turn, is backed by Apollo Group — the brand is now in fresh hands. Its new parent company: Regent, a dynamic private equity firm with a diverse portfolio spanning media, retail, and manufacturing. […]</article>","contentLength":325,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Anthropic appears to be using Brave to power web search for its Claude chatbot","url":"https://techcrunch.com/2025/03/21/anthropic-appears-to-be-using-brave-to-power-web-searches-for-its-claude-chatbot/","date":1742576823,"author":"Kyle Wiggers","guid":400,"unread":true,"content":"<article>Earlier this week, Anthropic rolled out a web search feature for its AI-powered chatbot platform, Claude, bringing the bot in line with many of its rivals. It wasn’t immediately clear which search index might be powering the feature — one possibility was that Anthropic had developed its own. But evidence suggests it’s Brave Search, the […]</article>","contentLength":349,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"TechCrunch Mobility: Inside Waymo’s deal with SFO, Elon’s moment of truth, and BYD’s breakthrough","url":"https://techcrunch.com/2025/03/21/techcrunch-mobility-inside-waymos-deal-with-sfo-elons-moment-of-truth-and-byds-breakthrough/","date":1742576700,"author":"Kirsten Korosec","guid":398,"unread":true,"content":"<article>Welcome back to TechCrunch Mobility — your central hub for news and insights on the future of transportation. Sign up here for free — just click TechCrunch Mobility! Before we jump into the news, just a quick bit of housekeeping. I’m putting “This week’s wheels” on hiatus for a few weeks as I get into […]</article>","contentLength":320,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Startups Weekly: Wiz’s bet paid off in an M&A-rich week","url":"https://techcrunch.com/2025/03/21/startups-weekly-wizs-bet-paid-off-in-an-ma-rich-week/","date":1742576700,"author":"Anna Heim","guid":399,"unread":true,"content":"<article>Welcome to Startups Weekly — your weekly recap of everything you can’t miss from the world of startups. Want it in your inbox every Friday? Sign up here. It’s rare to report on an 11-figure startup acquisition, let alone multiple high-value deals in a single week. And there are more subtle signs that things are […]</article>","contentLength":324,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Think Before You Link: Security Risks of Microchip Implants","url":"https://hackernoon.com/think-before-you-link-security-risks-of-microchip-implants?source=rss","date":1742574997,"author":"Zac Amos","guid":668,"unread":true,"content":"<p><strong>The ability to control electronics without touching them or paying with a swipe of the hand may seem like sci-fi, but it’s a growing reality. Microchip implants have existed in some form for decades, and technology is now advanced enough to make them practical. Still, this field carries significant security concerns.</strong></p><h2><strong>The Growing Field of Implanted Microchips</strong></h2><p>Veterinarians have implanted radiofrequency identification chips in pets since the 1990s. Human microchips  for medical use, though the technology did not catch on at the time.</p><p>\\\nFast-forward to today, and several leading tech companies and startups are researching microchip implants. Most famously, Elon Musk’s Neuralink has begun trials for brain-computer interfaces, which let users control electronic devices with their thoughts. Simpler chips that use RFID or near-field communication to store information or manage electronic payments are already available for commercial use.</p><p>\\\nThese chips can stand in for debit cards, give doctors access to vital medical information or work as keycards to access digital locks. Though they may not necessarily be widespread yet, they’re becoming increasingly prevalent.</p><h2>Cybersecurity Risks of Microchip Implants</h2><p>While chip implants can be highly convenient, they also open the door to unique cybersecurity risks. People should consider these potential dangers before proceeding with the technology.</p><p>Contactless payments are one of the most practical ways to use an implanted microchip. However, this application means users are theoretically always vulnerable to skimming. Cybercriminals could intercept financial information if they get close enough to the implant, and because it’s essentially part of the user’s body, physical protections are minimal.</p><p>\\\nThankfully, while skimming has garnered much attention from RFID-blocking wallets, it’s not a common threat. NFC is even more secure, as it can  of the chip, making it difficult for criminals to get close enough. Still, the possibility may worry some consumers.</p><p>A more concerning threat is the risk of cybercriminals installing malware onto an implanted chip. Researchers have proved that , even when the chip does not connect to an actively running device. Attackers may still need to get close to do so, but the damage might go far beyond skimming card details.</p><p>\\\nMalware could cause a chip to malfunction. Depending on what people use their microchips for, that could leave them locked out of rooms or unable to access some electronics. The malware could also spread to anything that connects to the implant, including smart home devices or users’ phones.</p><p>Finally, storing sensitive data in a wirelessly accessible chip in people’s bodies raises privacy questions, especially when it comes to BCIs. A BCI could theoretically , even including users’ thoughts if technology advances enough.</p><p>\\\nA breach at a business storing its customers’ brainwaves could give criminals access to a massive amount of highly sensitive information. Even outside such an event, targeted advertising based on brain data may feel like a privacy violation. The possibility of government bodies accessing this information further complicates the ethical implications.</p><p>Given these risks, implanted chips should implement a few extra security measures to protect their users. More best practices will emerge as the technology develops, but there are still a few must-have options to include.</p><p>The companies offering microchip implants must adhere to zero-trust policies. Government agencies , and private businesses would be wise to adopt the same standards.</p><p>\\\nZero-trust architecture treats every transaction as a possible breach, verifying all data transmissions before allowing them. It also restricts access permissions as much as possible. That level of attention and responsiveness is crucial for anything involving as much sensitive information and potential complications as a chip in users’ bodies.</p><p>Implementing stronger defenses for accessing the microchip and its connected services is also critical. Even a PIN is better than nothing. Hackers can , but they would still have to get within centimeters of an implanted NFC chip to do so.</p><p>\\\nSetting and changing a PIN and managing the information and permissions of an implanted chip should require more robust protections. Strong passwords and multi-factor authentication are essential. Services should also restrict access attempts to stop unauthorized users from changing what it takes to get into an implant-based system.</p><p>Finally, microchip implants will be more secure when they do less. While some organizations may not want to sacrifice functionality, limiting what a chip can do minimizes the ways an attacker can take advantage of it. Restricting long-range communications is vital for protection.</p><p>\\\nThe most robust defense implanted chips have today is that they only work within a few centimeters. A microchip with remote accessibility or Wi-Fi functionality suddenly becomes vulnerable to a much wider range of attacks and potential entry points. Maintaining a relative air gap by relying on NFC or RFID and restricting the kinds of data a chip can access and transmit make them far safer.</p><h2>Microchip Implants Are Exciting But Potentially Risky</h2><p>Despite being around since the ‘90s, implanted microchip technology is still in its infancy. As this field grows and develops, its possibilities will expand, but so might its potential dangers.</p><p>\\\nCybersecurity considerations must come before expanded functionality and adoption. When these systems follow a security-by-design approach, people can use them confidently and safely. Failing to consider such risks in design and implementation could lead to catastrophic consequences.</p>","contentLength":5734,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Kwaku Otchere's Vision for the Future of Live Event Ticketing with Vipass","url":"https://hackernoon.com/kwaku-otcheres-vision-for-the-future-of-live-event-ticketing-with-vipass?source=rss","date":1742574616,"author":"Jon Stojan Journalist","guid":667,"unread":true,"content":"<p>\\\nWaiting patiently for physical tickets to arrive in the mail or making a trip to the box office is long gone. Event tech has grown to offer more convenient and secure options. While digital tickets have become the norm, challenges around security and ticket authentication still remain.  aims to push event tech into its next phase by solving this issue and offering enhanced convenience through a streamlined approach and even greater security for event-goers and organizers alike.&nbsp;</p><p>Led by entrepreneur Kwaku Otchere, founder and CEO, Vipass is an events platform that combines secure digital solutions with a user-centric design to improve how event attendees experience live music and entertainment. Guided by Otchere's vision to redefine ticketing and live event engagement, this platform aims to create meaningful connections between event attendees and organizers to ensure a seamless and unforgettable experience.</p><blockquote><p>\"Our mission is to redefine what ticketing means by creating a more connected, immersive experience that goes beyond the transaction,\" </p></blockquote><p>\\\nThe forward-thinking platform brings together ticketing, fan engagement, and digital innovation that enhance the entire event journey—not just the transaction. The Vipass system uses real-time engagement and communication, sending attendees personalized updates and event information before and during the event to create an interactive and integrated live event experience.</p><p>\\\nThis progressive ticketing system also addresses the primary concerns of ticketing: securing and authenticating a user's ticket. With physical tickets possibly leading to difficulties for both organizers and attendees, digital tickets have become a simpler method for authenticating a user's ticket. Vipass has a security guarantee, providing relief for attendees excited for an entertaining experience, with the platform's system eliminating fraud by ensuring every ticket is tied to a verified user and preventing unauthorized resale.</p><h2><strong>Kwaku Otchere: Shaping the Future of Live Events</strong></h2><p>Kwaku, whose career spans leadership roles at Apple and The Walt Disney Company, is now using his skills to elevate live events through Vipass. His journey, from his roots in Ghana to leading teams of professionals from around the world, shows his resilience, creativity, and drive to make a lasting impact.</p><p>\\\nKwaku founded Vipass with the mission to address a key issue in live events: a recurring disconnect where transactional ticketing overshadowed the potential for deeper engagement. Inspired by a personal desire to create meaning from loss, he had the vision to create a platform that would bridge this gap and create a more immersive, personalized journey for both event-goers and organizers.</p><h2><strong>Past Successes and Future Goals</strong></h2><p>Vipass's digital innovation in ticketing and event experiences is enhancing personalization, security, and fan engagement at music festivals and entertainment events across the globe.</p><p>\\\nAt last year's NYE event in Prague, Vipass teamed up with WeLit, which is one of the Czech Republic's leading entertainment brands and is known for delivering high-energy events that bring people together in celebration. With WeLit's New Year's Eve events famously high-profile and lavish, Vipass's collaborative efforts demonstrated how much easier the ticketing process can be with their innovative, secure, and seamless ticketing platform.</p><p>\\\nWith a major upcoming collaboration on the way, this platform aims to expand and influence the event industry in 2025. Stay tuned for the announcement of this major collaboration, which will showcase the next step in Vipass's growth and impact on the event technology space.</p>","contentLength":3655,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Go Interfaces, Explained for TypeScript Developers","url":"https://hackernoon.com/go-interfaces-explained-for-typescript-developers?source=rss","date":1742574444,"author":"Gokul Chandrasekaran","guid":666,"unread":true,"content":"<p>\\\nAs someone who has worked primarily with Typescript over the last few years, learning Golang was challenging as much as it was stimulating.</p><h3>Recap: What are interfaces?</h3><p>Interfaces ensure consistent behavior without focusing on implementation details.</p><h3>Interfaces in TypeScript are structural</h3><blockquote><p><strong>TypeScript is a  type system, one way it achieves this is using interfaces.</strong></p></blockquote><p>\\\nThey allow you to define the structure of objects you expect to handle within your code. Let’s take a common example of a  object.</p><pre><code>interface Person {\n    name: string\n    talk(text: string): void\n    walk(to: string): string\n}\n\nconst john: Person = {\n    name: 'John Doe',\n    talk: function (text: string): void {\n        console.log('Speaking: ', text)\n    },\n    walk: function (to: string): string {\n        return `${this.name} is at ${to}`\n    },\n}\n</code></pre><h3>Go’s interfaces are behavioral</h3><p>Go uses , meaning a struct matches an interface as long as it has matching method signatures.</p><p>In Go, there is , all structs implicitly implement interfaces. The compiler deduces this during build time.</p><pre><code>// interface to be implemented by the Person struct\ntype PersonLike interface {\n Walk(string) string\n Talk(string)\n}\n\n// a `Person` struct\ntype Person struct {\n Name string\n}\n\n// Talk implements PersonBehavior.\nfunc (p Person) Talk(text string) {\n println(p.Name + \"is saying: '\" + text)\n}\n\n// Walk implements PersonBehavior.\nfunc (p Person) Walk(text string) string {\n return p.Name + \"is at \" + text\n}\n\nfunc main() {\n // declare `john` of PersonLike type\n var john PersonLike\n // assign an instance of the Person\n john = Person{}\n\n // invoke `.Walk` on the object\n println(john.Walk(\"home\"))\n}\n</code></pre><p>In the above example, a struct is first created and then the methods are implemented on it.</p><blockquote><p>The compiler automatically detects the implementation of the interface by the  struct. Any struct having the method signature will satisfy the interface type</p></blockquote><p>\\\nThe example below demonstrates how the same object instance can satisfy multiple interfaces, each containing a subset of its method signatures.</p><pre><code>package main\n\n// interface to be implemented by the Person struct\ntype PersonLike interface {\n Walk(string) string\n Talk(string)\n}\n\n// interface that only has `Walk`\ntype Walker interface {\n Walk(string) string\n}\n\n// interface that only has `Talk`\ntype Talker interface {\n Talk(string)\n}\n\n// a `Person` struct\ntype Person struct {\n Name string\n}\n\nfunc (p Person) Talk(text string) {\n println(p.Name + \"is saying: '\" + text)\n}\n\nfunc (p Person) Walk(text string) string {\n return p.Name + \"is at \" + text\n}\n\nfunc main() {\n // declare `john` of PersonLike type\n var john PersonLike\n // assign an instance of the Person\n john = Person{}\n\n var johnWalker Walker\n // assign to object to `Walker` type\n johnWalker = john\n // invoke `.Walk`\n johnWalker.Walk(\"home\")\n // Error below: johnWalker.Talk is undefined (Walker does not have Talk method)\n johnWalker.Talk(\"I am home\")\n\n var johnTalker Talker\n johnTalker = john\n johnTalker.Talk(\"How do I get home?\")\n\n // invoke `.Walk` on the object\n println(john.Walk(\"home\")) // \"John is at home\"\n println(john.(Person).Name) // John\n}\n</code></pre><p> allows you to create interfaces that have no methods declared i.e., it can hold a value of any type without any restrictions.</p><p>The  equivalent would be the  type</p><pre><code>const empty: unknown = {}\n</code></pre><p>Empty interfaces come in handy when the programmer knows the type but it is unknown to the type system. A common example would be de-serializing unknown types.</p><pre><code>func parse(val interface{}) (string, error) {\n // Gets the type of `value`\n switch value := val.(type) {\n case string:\n  return string(value), nil\n default:\n  return \"\", fmt.Errorf(\"unsupported data %#v\", value)\n }\n}\n</code></pre><p>Methods in Go can have either Pointer receivers or value receivers. Depending on what is used the compiler treats them differently while matching interfaces.</p><p>The following code won’t be compiled because of the error in line 39.</p><pre><code>package main\n\n// interface that only has `Talk`\ntype Talker interface {\n Talk(string)\n}\n\n// a `PersonPtr` struct that has a pointer receiver for `Talk`\ntype PersonPtr struct {\n Name string\n}\n\n// Add implements PersonBehavior.\nfunc (p *PersonPtr) Talk(text string) {\n println(p.Name + \"is saying: '\" + text)\n}\n\n// a `Person` struct that has a value receiver for `Talk`\ntype Person struct {\n Name string\n}\n\n// Add implements PersonBehavior.\nfunc (p Person) Talk(text string) {\n println(p.Name + \"is saying: '\" + text)\n}\n\nfunc main() {\n // assign an instance of the Person\n var john Talker\n\n johnny := PersonPtr{}\n johnny.Talk(\"I can talk\")\n\n // Error: PersonPtr does not implement Talker (method Talk has pointer receiver)\n john = johnny \n\n john.Talk(\"This wont work\")\n}\n</code></pre><p>This can however be fixed by replacing the assignment that  with:</p><ul><li>Since  is implemented only for , passing a pointer () to , ensuring it satisfies the interface.</li></ul><ul><li><strong>Go interfaces enable implicit implementation</strong>, reducing boilerplate and improving flexibility.</li><li> allows structs to satisfy interfaces automatically if method signatures match.</li><li><strong>Multiple interface satisfaction</strong> lets a struct conform to different behaviors dynamically.</li><li> provide a way to handle unknown types, useful for generics.</li><li><strong>Pointer vs. value receivers impact interface satisfaction</strong> - choosing the right one is key.</li></ul><p><em>Hope you enjoyed reading this as much as I enjoyed writing it.</em> \\n <em>If you think this will be of help to someone? Do not hesitate to share. If you liked it, tap the  below so other people will see this here on Medium. Don’t forget to show some love by </em></p>","contentLength":5497,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Microsoft Tells Windows 10 Users To Buy New PCs","url":"https://tech.slashdot.org/story/25/03/21/1623227/microsoft-tells-windows-10-users-to-buy-new-pcs?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742574300,"author":"msmash","guid":215,"unread":true,"content":"Microsoft has begun urging Windows 10 users to upgrade their systems ahead of the October 14, 2025 support deadline, but with a solution many find impractical: just buy a new computer. According to StatCounter data, 58.7% of Windows users remain on Windows 10 despite the impending end of security updates and technical assistance. \n\nIn emails to Windows 10 users, Microsoft's primary recommendation is to trade in old devices for newer Windows 11-compatible hardware, rather than focusing on alternative solutions.","contentLength":515,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Linux Security Hardening Cache Randomization Was Inadvertently Using The Same Seed","url":"https://www.phoronix.com/news/Linux-6.15-slab","date":1742573330,"author":"Michael Larabel","guid":779,"unread":true,"content":"<article>Ahead of the upcoming Linux 6.15 kernel cycle a few early pull requests have already been sent in to Linus Torvalds in advance of the anticipated v6.14 release on Sunday. Among those early changes for Linux 6.15 are the SLAB allocator updates that include a fix for cache randomization with kvmalloc inadvertently being inadequate due to accidentally using the same randomization seed...</article>","contentLength":387,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The HackerNoon Newsletter: Swift init(), Once and for All (3/21/2025)","url":"https://hackernoon.com/3-21-2025-newsletter?source=rss","date":1742573069,"author":"Noonification","guid":665,"unread":true,"content":"<p>🪐 What’s happening in tech today, March 21, 2025?</p><p>By <a href=\"https://hackernoon.com/u/badmonster0\">@badmonster0</a> [ 8 Min read ] Tutorial on indexing codebase for RAG with CocoIndex and Tree-sitter: chunking, embedding, semantic search, and build vector index for efficient retrieval. <a href=\"https://hackernoon.com/want-ai-to-actually-understand-your-code-this-tool-says-it-can-help\">Read More.</a></p><p>By <a href=\"https://hackernoon.com/u/willrrr\">@willrrr</a> [ 10 Min read ] The evolution of cryptocurrencies from their advent to their current, degenerate, state and some food for thought on where we are. <a href=\"https://hackernoon.com/the-reverse-scam-or-how-the-community-has-failed-crypto\">Read More.</a></p><p>By <a href=\"https://hackernoon.com/u/aryawrites\">@aryawrites</a> [ 4 Min read ] Vertical SaaS content doesn’t have to be boring. Tap into customer calls to build sharp, problem-first messaging that actually converts. <a href=\"https://hackernoon.com/your-next-content-breakthrough-isnt-on-googleits-buried-in-your-last-10-customer-calls\">Read More.</a></p><p>By <a href=\"https://hackernoon.com/u/kfamyn\">@kfamyn</a> [ 19 Min read ] Learn everything about Swift initializers — convenience override, saving memberwise initializer, required init() use cases, parameterless UIView() and more! <a href=\"https://hackernoon.com/swift-init-once-and-for-all\">Read More.</a></p><p>By <a href=\"https://hackernoon.com/u/MelvinTalk\">@MelvinTalk</a> [ 3 Min read ] Entrepreneur Asia Solnyshkina explores why women managers overperform, the hidden costs to businesses, and how workplace flexibility boosts talent  innovation <a href=\"https://hackernoon.com/why-women-managers-have-to-overperform-and-how-its-costing-businesses-talent-and-innovation\">Read More.</a></p><p>🧑‍💻 What happened in your world this week?</p><p>We hope you enjoy this worth of free reading material. Feel free to forward this email to a nerdy friend who'll love you for it.See you on Planet Internet! With love, \n The HackerNoon Team ✌️</p>","contentLength":1239,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Video Friday: Meet Mech, a Superhumanoid Robot","url":"https://spectrum.ieee.org/video-friday-superhumanoid-mech","date":1742572803,"author":"Evan Ackerman","guid":69,"unread":true,"content":"<p>Your weekly selection of awesome robot videos</p>","contentLength":45,"flags":null,"enclosureUrl":"https://spectrum.ieee.org/media-library/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy81ODM3Mzc4OS9vcmlnaW4ucG5nIiwiZXhwaXJlc19hdCI6MTc0NDQ4Mjg2MX0.8F1Nv-rQ90yavrc6BODCzk8vQ7Wgo0uRAuMXAz9ztMk/image.png?width=600","enclosureMime":"","commentsUrl":null},{"title":"Yahoo Sells TechCrunch","url":"https://tech.slashdot.org/story/25/03/21/1550212/yahoo-sells-techcrunch?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742572200,"author":"msmash","guid":214,"unread":true,"content":"Yahoo on Friday said it has struck a deal to sell TechCrunch, the 20-year-old tech journalism site, to Regent, a media investment firm. Axios: Yahoo's business centers mostly on aggregation. Journalism isn't its core focus. Regent is trying to pull together a portfolio of tech news sites and is eager to invest in news. Earlier this week, it acquired Foundry, which houses a slew of online tech publications, such as PCWorld, Macworld and TechAdvisor. \n\nIn a statement, Regent said it is \"thrilled to expand its reach as it provides breaking technology news, opinions, and analysis on tech companies worldwide to our audience.\" Financial deal terms were not disclosed. The deal will not require regulatory review, which is normally needed for deals valued at roughly more than $100 million.","contentLength":791,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"ChatGPT: Everything you need to know about the AI-powered chatbot","url":"https://techcrunch.com/2025/03/21/chatgpt-everything-to-know-about-the-ai-chatbot/","date":1742572005,"author":"Kyle Wiggers, Cody Corrall, Alyssa Stringer, Kate Park","guid":397,"unread":true,"content":"<article>ChatGPT, OpenAI’s text-generating AI chatbot, has taken the world by storm since its launch in November 2022. What started as a tool to supercharge productivity through writing essays and code with short text prompts has evolved into a behemoth with 300 million weekly active users. 2024 was a big year for OpenAI, from its partnership […]</article>","contentLength":343,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Wayve CEO shares his key ingredients for scaling autonomous driving tech","url":"https://techcrunch.com/2025/03/21/wayve-ceo-shares-his-key-ingredients-for-scaling-autonomous-driving-tech/","date":1742570291,"author":"Rebecca Bellan","guid":396,"unread":true,"content":"<article>Wayve co-founder and CEO Alex Kendall sees promise in bringing his autonomous vehicle startup’s tech to market. That is, if Wayve sticks to its strategy of ensuring its automated driving software is cheap to run, hardware agnostic, and can be applied to advanced driver-assistance systems, robotaxis, and even robotics.&nbsp; The strategy, which Kendall laid out […]</article>","contentLength":366,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Microsoft is exploring a way to credit contributors to AI training data","url":"https://techcrunch.com/2025/03/21/microsoft-is-exploring-a-way-to-credit-contributors-to-ai-training-data/","date":1742570121,"author":"Kyle Wiggers","guid":395,"unread":true,"content":"<article>Microsoft is launching a research project to estimate the influence of specific training examples on the text, images, and other types of media that generative AI models create. That’s per a job listing dating back to December that was recently recirculated on LinkedIn. According to the listing, which seeks a research intern, the project will […]</article>","contentLength":352,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Meta spotted testing AI-generated comments on Instagram","url":"https://techcrunch.com/2025/03/21/meta-spotted-testing-ai-generated-comments-on-instagram/","date":1742569771,"author":"Aisha Malik","guid":394,"unread":true,"content":"<article>In recent years, Meta has introduced many AI features and capabilities to its apps, even going so far as experimenting with AI-generated characters complete with unique profiles and personalities, before scrapping them after they were deemed creepy and unnecessary. In yet another move that may not be received well among users, Meta wants to use […]</article>","contentLength":352,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How Social Engagement Drove NFT Market Success in 2022","url":"https://hackernoon.com/how-social-engagement-drove-nft-market-success-in-2022?source=rss","date":1742569205,"author":"Ruslan Gromov","guid":664,"unread":true,"content":"<p>(1) SIMONE CASALE-BRUNET, École Polytechnique Fédérale de Lausanne, Switzerland;</p><p>(2) MIRKO ZICHICHI, Universidad Politécnica de Madrid, Spain;</p><p>(3) LEE HUTCHINSON, WhaleAnalytica.com, Switzerland;</p><p>(4) MARCO MATTAVELLI, École Polytechnique Fédérale de Lausanne, Switzerland;</p><p>(5) STEFANO FERRETTI, University of Urbino “Carlo Bo”, Italy.</p><p>4 Data Analysis and Results</p><p>The NFT phenomenon is a topic that became mainstream during 2021 and has continued to receive increasing attention from early 2022 to the present. This blockchain-based technology has also come to the forefront thanks to projects such as BAYCs whose images have been purchased by celebrities and traded at very high prices as reported by several media. In this paper, we analyzed the phenomenon of NFTs, focusing on the class related to PFPs. We chose 18 projects based on our knowledge in the field and based on their importance in terms of volumes traded, users, and social activity. It was illustrated through analysis of social activity how the concept of social community is essential to ensure liquidity and value of PFP projects, i.e., used as social icons. The centrality and influence of the community related to BAYCs was demonstrated, that despite being second to CryptoPunks in terms of volumes traded, social activity is much higher and central to every other project in the industry. This work aimed to lay the groundwork for more in-depth future studies on understanding whether patterns and causality conditions may exist between elements such as the number of tweets, average price of a collection, Twitter users, and Ethereum wallet.</p><p>[1] Oluwaseun Ajao, Jun Hong, and Weiru Liu. 2015. A survey of location inference techniques on Twitter. Journal of Information Science 41, 6 (2015), 855–864. https://doi.org/10.1177/0165551515602847</p><p>\\\n[2] Dune Analytics. 2022. rchen8: OpenSea Dashboard. Retrieved June 6, 2022 from https://dune.xyz/rchen8/opensea</p><p>\\\n[3] Joseph Bonneau, Jonathan Anderson, Ross Anderson, and Frank Stajano. 2009. Eight friends are enough: social graph approximation via public listings. In Proceedings of the Second ACM EuroSys Workshop on Social Network Systems. 13–18. https://doi.org/10.1145/1578002.1578005</p><p>\\\n[4] Evan Brinckman, Andrey Kuehlkamp, Jarek Nabrzyski, and Ian J. Taylor. 2019. Techniques and Applications for Crawling, Ingesting and Analyzing Blockchain Data. In 2019 International Conference on Information and Communication Technology Convergence (ICTC). IEEE, 717–722. https: //doi.org/10.1109/ICTC46691.2019.8939746</p><p>\\\n[5] Pinar Caglayan and Zehra Ozkan. 2021. NFTs and copyright: challenges and opportunities. Journal of Intellectual Property Law&amp; Practice 16, 10 (06 2021). https://doi.org/10.1093/jiplp/jpab104</p><p>\\\n[6] Umit Can and Bilal Alatas. 2019. A new direction in social network analysis: Online social network analysis problems and applications. Physica A: Statistical Mechanics and its Applications 535 (2019), 122372. https://doi.org/10.1016/j.physa.2019.122372</p><p>\\\n[7] Simone Casale-Brunet, Paolo Ribeca, Patrick Doyle, and Marco Mattavelli. 2021. Networks of Ethereum Non-Fungible Tokens: A Graph-Based Analysis of the ERC-721 Ecosystem. In IEEE Blockchain 2021, 06 - 08 December. https://doi.org/10.1109/Blockchain53845.2021.00033</p><p>\\\n[8] Joseph Coelho, Dawson D’almeida, Scott Coyne, Nathan Gilkerson, Katelyn Mills, and Praveen Madiraju. 2019. Social Media and Forecasting Stock Price Change. In 2019 IEEE 43rd Annual Computer Software and Applications Conference (COMPSAC), Vol. 2. 195–200. https://doi.org/10.1109/ COMPSAC.2019.10206</p><p>\\\n[9] CoinMarketCap. 2022. Ethereum historical data. Retrieved June 6, 2022 from https://coinmarketcap.com/currencies/ethereum/historical-data/</p><p>\\\n[10] Iain J Cruickshank and Kathleen M Carley. 2020. Characterizing communities of hashtag usage on twitter during the 2020 COVID-19 pandemic by multi-view clustering. Applied Network Science 5, 1 (2020), 1–40. https://doi.org/10.1007/s41109-020-00317-8</p><p>\\\n[11] Roberta De Michele, Stefano Ferretti, and Marco Furini. 2019. On helping broadcasters to promote tv-shows through hashtags. Multimedia Tools and Applications 78, 3 (2019), 3279–3296. https://doi.org/10.1007/s11042-018-6510-7</p><p>\\\n[12] Decrypt.co. 2022. Hot Ethereum NFT Platform LooksRare Is Rife With Wash Trading - And OK With It. Retrieved June 6, 2022 from https: //decrypt.co/90317/ethereum-nft-market-looksrare-wash-trading</p><p>\\\n[13] Joshua Fair!eld. 2021. Tokenized: The Law of Non-Fungible Tokens and Unique Digital Property. Indiana Law Journal, Forthcoming (04 2021).</p><p>\\\n[14] Stefano Ferretti, Marco Furini, and Manuela Montangero. 2019. Diabetes: What are italian twitter users talking about?. In 2019 28th International Conference on Computer Communication and Networks (ICCCN). IEEE, 1–6. https://doi.org/10.1109/ICCCN.2019.8847039</p><p>\\\n[15] Anastasia Giachanou and Fabio Crestani. 2016. Like it or not: A survey of twitter sentiment analysis methods. ACM Computing Surveys (CSUR) 49, 2 (2016), 1–41. https://doi.org/10.1145/2938640</p><p>\\\n[16] Google. 2022. BigQuery. Retrieved June 6, 2022 from https://cloud.google.com/bigquery/</p><p>\\\n[17] Shrey Jain, Camille Bruckmann, and Chase McDougall. 2022. NFT Appraisal Prediction: Utilizing Search Trends, Public Market Data, Linear Regression and Recurrent Neural Networks. arXiv preprint arXiv:2204.12932 (2022).</p><p>\\\n[18] Arnav Kapoor, Dipanwita Guhathakurta, Mehul Mathur, Rupanshu Yadav, Manish Gupta, and Ponnurungam Kumaraguru. 2022. Tweetboost: Influence of social media on nft valuation. arXiv preprint arXiv:2201.08373 (2022).</p><p>\\\n[19] OpenSea. 2022. OpenSea, the largest NFT marketplace. Retrieved June 6, 2022 from https://opensea.io/</p><p>\\\n[20] Daniel M Romero, Brendan Meeder, and Jon Kleinberg. 2011. Differences in the mechanics of information diffusion across topics: idioms, political hashtags, and complex contagion on twitter. In Proceedings of the 20th international conference on World wide web. 695–704. https: //doi.org/10.1145/1963405.1963503</p><p>\\\n[21] İlker Türker and Eyüb Ekmel Sulak. 2018. A multilayer network analysis of hashtags in twitter via co-occurrence and semantic links. International Journal of Modern Physics B 32, 04 (2018), 1850029. https://doi.org/10.1142/S0217979218500297</p><p>\\\n[22] Twitter. 2022. Search Tweets API. Retrieved June 6, 2022 from https://developer.twitter.com/en/docs/twitter-api/tweets/search/introduction</p><p>\\\n[23] Kishore Vasan, Milán Janosov, and Albert-László Barabási. 2022. Quantifying NFT-driven networks in crypto art. Scienti!c reports 12, 1 (2022), 1–11. [24] Shermin Voshmgir. 2020. Token Economy: How the Web3 reinvents the Internet. Vol. 2. Token Kitchen.</p><p>\\\n[25] Andi Wiliam, Sasmoko Sasmoko, Wibowo Kosasih, and Yasinta Indrianti. 2020. Sentiment analysis of social media engagement to purchasing intention. In Understanding Digital Industry. Routledge, 362–365. https://doi.org/10.1201/9780367814557-86</p><p>\\\n[26] Nick Yee, Jeremy N. Bailenson, and Nicolas Ducheneaut. 2009. The Proteus Effect: Implications of Transformed Digital Self Representation on Online and O&amp;ine Behavior. Communication Research 36, 2 (2009), 285–312. https://doi.org/10.1177/0093650208330254 arXiv:https://doi.org/10.1177/0093650208330254</p>","contentLength":7193,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Google Sues Scammers Over Fake Maps Listings","url":"https://tech.slashdot.org/story/25/03/21/1126233/google-sues-scammers-over-fake-maps-listings?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742569200,"author":"msmash","guid":213,"unread":true,"content":"Google has filed a lawsuit against alleged scammers who created and sold fake business profiles on Google Maps, the company said. The legal action follows an investigation that uncovered and eliminated more than 10,000 illegitimate listings. \n\nThe investigation began after a Texas business reported an unlicensed locksmith impersonating them on the platform. Google discovered the scams primarily targeted \"duress verticals\" -- services needed in urgent situations like locksmiths and towing companies. \"Once we're alerted to the actual fraud, we take extreme efforts to identify similar fraudulent listings,\" said Halimah DeLaine Prado, Google's general counsel. \n\nThe scammers used tactics including bait-and-switch schemes and intercepting calls to legitimate businesses through \"lead generation services.\" They also sold fraudulent positive reviews to suppress negative feedback.","contentLength":884,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"New Intel/AMD GPU Features, Apple Touch Bar Drivers & Other Likely Changes For Linux 6.15","url":"https://www.phoronix.com/news/Linux-6.15-Likely-Features","date":1742568720,"author":"Michael Larabel","guid":778,"unread":true,"content":"<article>With the Linux 6.14 stable kernel likely debuting on Sunday, the Linux 6.15 merge window will then open for kicking off the next development cycle. There's a lot of exciting changes and new features building up ahead of the Linux 6.15 merge window...</article>","contentLength":250,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"1X will test humanoid robots in ‘a few hundred’ homes in 2025","url":"https://techcrunch.com/2025/03/21/1x-will-test-humanoid-robots-in-a-few-hundred-homes-in-2025/","date":1742566500,"author":"Maxwell Zeff","guid":393,"unread":true,"content":"<article>Norwegian robotics startup 1X plans to start early tests of its humanoid robot, Neo Gamma, in “a few hundred to a few thousand” homes by the end of 2025, according to the company’s CEO, Bernt Børnich. “Neo Gamma is going into homes this year,” Børnich told TechCrunch in an interview at Nvidia GTC 2025. “We […]</article>","contentLength":327,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"'Hey Siri, What Month Is It?'","url":"https://apple.slashdot.org/story/25/03/21/1114253/hey-siri-what-month-is-it?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742565600,"author":"msmash","guid":212,"unread":true,"content":"DaringFireball: Whole Reddit thread examining this simple question: \"What month is it?\" and Siri's \"I'm sorry, I don't understand\" response (which I just reproduced on my iPhone 16 Pro running iOS 18.4b4). One guy changed the question to \"What month is it currently?\" and got the answer \"It is 2025.\" More comments from that thread:\"I ask Siri to play a podcast and she literally says, \"I'm trying to play from Apple Podcasts but it doesn't look like you have it installed.\" I didn't even know you could delete that app. I certainly haven't. So I have to manually do it every time now. It used to work.\" \n\n\"I asked Siri last night to set a reminder for 3:50, so naturally she set it for 10:00.\" Further reading:\nApple Shakes Up AI Executive Ranks in Bid to Turn Around Siri;\n'Something Is Rotten in the State of Cupertino'.","contentLength":823,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Raspberry Pi Announces rpi-image-gen To Help Craft Custom Software Images","url":"https://www.phoronix.com/news/Raspberry-Pi-rpi-image-gen","date":1742564741,"author":"Michael Larabel","guid":777,"unread":true,"content":"<article>Following a slew of hardware announcements in the past few months like the RP2350 shipping, Raspberry Pi 5 16GB, Raspberry Pi Monitor, and Raspberry Pi 500, today they have a new software announcement. Today they formally announced \"rpi-image-gen\" as a new tool to help customers in crafting customized software OS images...</article>","contentLength":324,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Commercial services platform BuildOps becomes a unicorn, raises $127M","url":"https://techcrunch.com/2025/03/21/commercial-services-platform-buildops-becomes-a-unicorn-raises-127m/","date":1742564700,"author":"Mary Ann Azevedo","guid":392,"unread":true,"content":"<article>Commercial services tech hasn’t historically been considered “sexy,” but the need for innovation in the space is enormous. That need has translated into a large fundraise for a company focused on streamlining commercial contracting processes. On Friday, BuildOps, which develops software for commercial services contractors, announced that it has raised $127 million in a Series […]</article>","contentLength":390,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Russian zero-day seller is offering up to $4 million for Telegram exploits","url":"https://techcrunch.com/2025/03/21/russian-zero-day-seller-is-offering-up-to-4-million-for-telegram-exploits/","date":1742562300,"author":"Lorenzo Franceschi-Bicchierai","guid":391,"unread":true,"content":"<article>Two sources in the zero-day industry say Operation Zero's prices for exploits against the popular messaging app Telegram will depend on different factors.</article>","contentLength":154,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"How Twitter Hashtags Drove NFT Trends and Engagement","url":"https://hackernoon.com/how-twitter-hashtags-drove-nft-trends-and-engagement?source=rss","date":1742562009,"author":"Ruslan Gromov","guid":663,"unread":true,"content":"<p>(1) SIMONE CASALE-BRUNET, École Polytechnique Fédérale de Lausanne, Switzerland;</p><p>(2) MIRKO ZICHICHI, Universidad Politécnica de Madrid, Spain;</p><p>(3) LEE HUTCHINSON, WhaleAnalytica.com, Switzerland;</p><p>(4) MARCO MATTAVELLI, École Polytechnique Fédérale de Lausanne, Switzerland;</p><p>(5) STEFANO FERRETTI, University of Urbino “Carlo Bo”, Italy.</p><p>4 Data Analysis and Results</p><p>As a further point of analysis, we focused on hashtags and how they are used in tweets. The hashtags - that are words preceded by the # symbol such as #NFT - are in fact the most common method used by Twitter users to create</p><p>\\\nspecific groups and streams of communication. We identified 60,060 different hashtags and thus constructed a weighted undirected graph where: each node represents a hashtag and each connection between two nodes represents the presence of a tweet in which both corresponding hashtags were used. As the weight of each node was assigned the number of tweets in which the corresponding hashtag was present, and as the weights of each connection the number of tweets having the two corresponding hashtags in common. Figure 6a illustrates in descending order which are the 20 most used hashtags: NFT, cryptopunks, and BAYC are the most significant ones. Beyond the 20th, namely art, the weights are much lower. Overall, the properties of the graph thus formed are shown in Table 3a: the graph consists of 762,950 connections, with an average weight of about 29,634 common tweets. The average clustering coefficient and the relatively significant number of connected components (that is 439) suggest the presence of highly specialized communities within this content graph. However, edge density is extremely low in this case, being hashtags mainly connected with some central hashtags (see below). Most likely for this reason, modularity has a low value. While</p><p>\\\nFigure 6b illustrates in descending order which are the 20 hashtags with highest pagerank. Again, the values beyond the 20-th (famorie, related to the CryptoMories) the weight is much lower. Figure 4b illustrates the graph taking into account only these 20 hashtags, where the size of the nodes is proportional to the pagerank: again, as can be observed, the hashtags NFT, cryptopunks and BAYC are the most in\"uential. We also performed a commonality analysis for the hashtags: this was summarized in Table 3c. As can be observed, the NFT hashtag is the one that is most common to all. The hashtags nftart, nftartist, and nftcollection are neither close to cryptopunks nor BAYC: this indicates how for more generic topics, and not only related to PFP, the discourses are less polarized on cryptopunks and BAYC.</p><p>Figure 7 shows trends in volume, average price, tweets, and users (wallets and Twitter accounts) for a number of very different projects from the date of creation until April 14, 2022. BAYC, CryptoHodlers, Mekaverse, and mfers were considered. As can be seen, the BAYC built up a continuous engagement on Twitter where within a year the number of unique users talking about them grew exponentially, as did the average price, which went from 0.08ETH to more than 100ETH in less than a year. There are projects, such as CryptoHodlers, on the other hand, where although the creators try to build an ecosystem around their project by distributing comics or developing a new reserved NFT, the community has not grown, impacting the average price and liquidity (in terms of daily trades) of this project. Mekaverse and mfers, summarize these concepts: for the former we see how a high number of tweets in the early stages of the project resulted in an initial high exchange value where the figurines traded for a minimum price of 8ETH, then went to 10 times less as the number of tweets dropped. For the latter, on the other hand, we see that engagement in terms of daily tweets coincides with an increase in average price, and this occurs gradually and constantly after their release.</p>","contentLength":3939,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AlexNet Source Code Is Now Open Source","url":"https://spectrum.ieee.org/alexnet-source-code","date":1742562003,"author":"Hansen Hsu","guid":68,"unread":true,"content":"<p>First released in 2012, AlexNet sparked a revolution in AI and computer vision</p>","contentLength":78,"flags":null,"enclosureUrl":"https://spectrum.ieee.org/media-library/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy81ODM2NzgzOC9vcmlnaW4uanBnIiwiZXhwaXJlc19hdCI6MTc4OTUyOTc1Nn0.OQfBJOPQ7LvjN2mFru5XJOFO88BJTwYUvGspfN81dtA/image.jpg?width=600","enclosureMime":"","commentsUrl":null},{"title":"Linux 6.14 Sees Last Minute Fix For A Two Year Old Regression Causing A 30% Performance Drop","url":"https://www.phoronix.com/news/Linux-6.14-Sched-2-Year-Regress","date":1742562000,"author":"Michael Larabel","guid":776,"unread":true,"content":"<article>Submitted today ahead of the Linux 6.14 stable release expected Sunday is a lone scheduler fix for the kernel. This patch is for reverting a change made to the Linux kernel two years ago that ended up regressing some workloads with a significant performance hit...</article>","contentLength":264,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"European Central Bank Chief Economist Warns of US Financial Dominance","url":"https://slashdot.org/story/25/03/21/0658224/european-central-bank-chief-economist-warns-of-us-financial-dominance?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742560200,"author":"msmash","guid":211,"unread":true,"content":"European Central Bank Chief Economist Philip Lane warned that Europe must develop a digital euro to counter growing American influence over the continent's financial system [alternative source] amid escalating geopolitical tensions. Lane specifically cited Europe's \"current dependence on US payment-card providers Visa and Mastercard, as well as technology companies including PayPal, Apple and Google\" as a vulnerability requiring urgent action. \n\nHis comments come as President Donald Trump's administration promotes dollar-backed stablecoins worldwide as part of a broader cryptocurrency strategy, alarming European officials. ECB Governing Council member Francois Villeroy de Galhau recently cautioned that \"the US risks bringing about the next financial emergency through its support of cryptocurrencies.\" \n\n\"The digital euro is not just about adapting to the digital age. It is about ensuring Europe controls its monetary and financial destiny,\" Lane told a conference in Ireland, noting that a digital currency would \"limit the likelihood of foreign-currency stablecoins gaining a foothold\" in Europe.","contentLength":1109,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"AMD Announces Open-Source \"GAIA\" For GenAI But Currently Windows-Only","url":"https://www.phoronix.com/news/AMD-GAIA-Open-Source","date":1742560200,"author":"Michael Larabel","guid":775,"unread":true,"content":"<article>AMD on Thursday announced GAIA for \"Generative AI Is Awesome\" as a means of easily running local large language models (LLMs) on Ryzen AI PCs with the XDNA NPU. GAIA provides an easy software demonstration for Ryzen AI capabilities but sadly for the moment is limited to Microsoft Windows platforms...</article>","contentLength":301,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Mira Reaches Major Milestone: 2.5M Users and 2B Daily Tokens Processed","url":"https://hackernoon.com/mira-reaches-major-milestone-25m-users-and-2b-daily-tokens-processed?source=rss","date":1742557743,"author":"EAK Wire","guid":662,"unread":true,"content":"<p>Singapore, March 21, 2025 — Mira, the pioneer in decentralized AI verification technology, announces unprecedented growth with 2.5 million users and two billion tokens processed daily across its ecosystem applications.</p><p>\\\nThe milestone demonstrates growing market demand for AI that can operate autonomously without human oversight. Processing two billion tokens daily is equivalent to approximately half of Wikipedia's content, generating 7.9 million images, or processing over 2,100 hours of video content per day.</p><blockquote><p>\"This growth confirms we're addressing the critical barrier to AI's transformative potential,\" said Karan Sirdesai, Co-founder and CEO of Mira. \"Today's AI remains constrained by the need for human verification—we're removing that bottleneck to enable truly autonomous intelligence capable of operating independently in high-stakes scenarios.\"</p></blockquote><h2>Enabling the Shift from 'Baby AI' to Autonomous Intelligence</h2><p>Current AI systems excel at generating content and solving problems, but their probabilistic nature makes them fundamentally unreliable. This creates a paradox: the more powerful AI becomes, the more human hours are required to verify its output, severely limiting AI's potential.</p><p>\\\nMira is addressing this challenge through decentralized verification that enables AI systems to operate autonomously in consequential domains. By transforming the verification process from a human bottleneck to a scalable, trustless system, Mira is paving the way for AI's next evolutionary leap.</p><h2>Applications Demonstrating the Vision</h2><p>This vision is coming to life through several applications built on Mira's verification infrastructure:</p><ol><li><p>Klok — A multi-LLM chat application providing access to leading AI models including DeepSeek-R1, GPT-4o mini, and Llama 3.3 70B Instruct within a unified interface. Klok treats each AI model as a trustless independent node, with verification features set to roll out in coming weeks.</p></li><li><p>WikiSentry — An AI agent that autonomously fact-checks Wikipedia articles against verified sources, identifying hallucinations, biases, and misinformation—a task previously requiring extensive human oversight.</p></li><li><p>Astro — A guidance platform helping users navigate life's important decisions through personalized, AI-powered insights that leverage verified information for reliable advice.</p></li><li><p>Amor — A supportive AI companion offering conversation and emotional connection for those seeking meaningful interaction, with verification ensuring consistent and trustworthy responses.</p><h2>Public Testnet Enables Developer Innovation</h2></li></ol><p>Mira has today launched its Public Testnet, enabling developers, enterprises, and users to explore its blockchain-based verification network at , where all AI inferences are recorded as transparent, verifiable events. Read more .</p><h2>Strategic Partnerships Expanding the Ecosystem</h2><p>Mira has integrated with leading agent frameworks including Eliza, SendAI, Arc, ZerePy, and FereAI, while establishing partnerships with blockchain networks like  and . Infrastructure collaborations with io.net, Aethir, Hyperbolic, Exabits, and Spheron, along with industry partnerships with KernelDAO and Delphi Digital, further strengthen Mira's ecosystem.</p><p>Backed by $9 million in funding from Framework, Accel, Mechanism, and Bitkraft, with angel investors including Balaji Srinivasan and Sandeep Nailwal, Mira is positioned to transform how AI systems operate at scale.</p><p>Mira is building the foundational verification layer that enables trustless AI systems through advanced consensus mechanisms. The network combines sophisticated claim transformation and distributed verification protocols to achieve reliable AI execution at scale. By solving the fundamental challenge of error rates in AI, Mira is establishing new standards for reliability—paving the way for autonomous intelligence that can operate without human oversight, unlocking AI's transformative potential across society.</p><p>Follow Mira on  and join their  for real-time updates.</p><p>\\\nThis press release is brought to you by EAK Wire, the leading  via HackerNoon Business Blogging Program.</p>","contentLength":4068,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Google claims news is worthless to its ad business after test involving 1% of search results in eight EU markets","url":"https://techcrunch.com/2025/03/21/google-claims-news-is-worthless-to-its-ad-business-after-test-involving-1-of-search-results-in-eight-eu-markets/","date":1742556973,"author":"Natasha Lomas","guid":390,"unread":true,"content":"<article>Google has reported the results of an experiment it ran which removed news from search results for 1% of users for 2.5 months in eight* markets in Europe — claiming the results show that news is essentially worthless to Google’s ad business. The search giant conducted the test because European copyright law requires it to […]</article>","contentLength":333,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Use This Checklist to Make Your Angular App Scalable","url":"https://hackernoon.com/use-this-checklist-to-make-your-angular-app-scalable?source=rss","date":1742555542,"author":"Tom Smykowski","guid":661,"unread":true,"content":"<p>Years ago I thought accessibility was for 0.1% of people. Working on apps serving millions of users taught me it’s about way more people, who have to be included when building scalable Angular apps.</p><p>\\n One of the main goals of us, frontend software engineers, is to make sure the apps we build are accessible to as many people as possible. There are many ways to ensure that, for example having great designs, but also being really focused on how the app works. Testing it in multiple browsers, on multiple resolution, screen orientations and so on.</p><p>\\\nBut the term “accessibility” isn’t really about it, but, as Wikipedia says:</p><blockquote><p>Web accessibility, or eAccessibility,[1] is the inclusive practice of ensuring there are no barriers that prevent interaction with, or access to, websites on the World Wide Web by people with physical disabilities, situational disabilities, and socio-economic restrictions on bandwidth and speed. When sites are correctly designed, developed and edited, more users have equal access to information and functionality. ()</p></blockquote><p>\\\nWhat we can recognize as the user oriented needs for web accessibility can be grouped into multiple categories:</p><ul><li>cognitive and intellectual</li></ul><p>\\\nAnd we tend to think these issues only affect some minor group. So we apply WCAG rules not always as part of the general process. It’s rather something that is either taken care of to some extend during the whole design and development process, or at some point as a separate task.</p><p>\\\n<em>By the way, my name is Tom Smykowski, I’m an expert in building scalable, enterprise Angular applications and in this series I’ll be teaching you how to do it!</em></p><p>\\\nApproaches to accessibility depend on many factors, including legal requirements. But from the people perspective, what can be surprising, that actually accessibility isn’t about a narrow group of people.</p><p>\\\nJust to five some examples. Around 8% of men have what is called congenital red–green color blindness. It means that they can’t to various extend to differentiate some pairs of colors:</p><ol></ol><p>\\\nIt seems to not affect UI development, until you have a list of alerts and notifications. When alert and notification icons are similar and small, people won’t be able to recognize what is what leading to problems or to considerable inconvenience that will drive them away from your app.</p><p>\\\nAnd we’re not talking about some minor group. It’s 8% of men. An inaccessible app in that matter can be a blocker for 8% of potential users. If someone came and said, he can increase adoption by around 8%, he would be called a charlatan, but here accessibility itself can do it without any impact on business and marketing processes if initially the app isn’t accessible in that matter.</p><p>\\\nAnother set of disorders that affects if people can use apps is motor difficulties. For example essential tremor. It’s a motor neurological disorder causing involuntary, rhythmic shaking of hands that affects almost 1% of global population.</p><p>\\\nPeople with essential tremor, but also other motor disorders find many difficulties in life, also in the area of digital life where apps that should help them, not always do it. Too small buttons, located too close to each other are only a tip of an iceberg of thigs that can lock out people with disabilities from these areas from your application.</p><p>\\\nMoving fast forward to intellectual and cognitive conditions, just for selective example, we have around 1% of people affected by intellectual disabilities, and separately and not connected, 10% of global population affected by autism spectrum.</p><p>\\\nComplex and overloaded interfaces, ambiguous icons, wording, non consistent navigation, jargon or complex language, no clear feedback, poor readability are just some of elements that affect negatively people with intellectual and cognitive conditions.</p><p>\\\nAgain, a quite large proportion of people globally that will find it hard to use your app if it’s not accessible. What’s interesting, especially for MVP driven startups this is essential, because the app shouldn’t only do the one thing that people want, it should also allow them to do it.</p><p>\\\nAs you can see, accessibility isn’t only for few people, it’s for a quite large proportion of all people. Around one of three people has a condition that makes using apps difficult.</p><p>\\\nInaccessible app isn’t just an inconvenience and in highly competitive market it’s a deal-breaker. No one will use an app if they can go to competition that allows them to do just what they need to do despite their various conditions.</p><p>\\\nIn terms of scalable Angular apps, it means we should focus on accessibility and treat it as essential process of design and development. I’d say even more, we should sacrifice other design goals if they lower accessibility, because there’s no sense in building pretty things that people can’t use.</p><p>\\\nThe goal of architecting scalable Angular apps is to build ones that are widely used, and prepared for global usage horizontally and vertically. In the process terms a good design system and component library are places where accessibility can be provided organisation-wide.</p><p>\\\nBut it also requires training and including accessibility in all processes affecting user interface, from requirement phase, through design to implementation and maintained, because everyone involved in these processes has to be aligned to reach for the same goal.</p><p>\\\nThat way we don’t build accessibility debt. Compared to technical debt, accessibility debt affects our users every day. Way more people than we think.</p><p>\\\n<strong>I’ve prepared a free checklist how to make your Angular app scalable and ready for enterprise demand. If you’re interested, you can get this checklist for&nbsp;.</strong></p><p>\\\nIf you have any questions, ask these in the comment section!</p>","contentLength":5769,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Analyzing the 2022 NFT Market Growth Through Wallets and Tweets","url":"https://hackernoon.com/analyzing-the-2022-nft-market-growth-through-wallets-and-tweets?source=rss","date":1742554806,"author":"Ruslan Gromov","guid":660,"unread":true,"content":"<p>(1) SIMONE CASALE-BRUNET, École Polytechnique Fédérale de Lausanne, Switzerland;</p><p>(2) MIRKO ZICHICHI, Universidad Politécnica de Madrid, Spain;</p><p>(3) LEE HUTCHINSON, WhaleAnalytica.com, Switzerland;</p><p>(4) MARCO MATTAVELLI, École Polytechnique Fédérale de Lausanne, Switzerland;</p><p>(5) STEFANO FERRETTI, University of Urbino “Carlo Bo”, Italy.</p><p>4 Data Analysis and Results</p><h2>4.1 Ethereum wallets and Twitter users</h2><p>The NFT market has seen exponential growth from January 2021 to the present both in terms of volumes traded and users who have purchased at least one NFT [2]. As the first analysis, we analysed the growth that occurred on this ecosystem in terms of number of transactions and tweets, and in terms of number of unique Twitter users and Ethereum wallets who participated in the various project communities. The data reported in Table 2, and summarized in Figure 2, shows how in one year the PFP interest on Twitter went from 50 daily tweets in the beginning of January 2021 to more than 50,000 daily tweets in mid April 2022 by considering only the 18 selected projects. In the same period the number of daily unique Twitter users passed from 50 to more than 20,000 with a peak of 60,000, onboarding during the whole period more than 1 million unique active users. Interestingly, from Figure 2 (c) and (d) both the new and cumulative Twitter users and Ethereum wallets follow the same trend: this means that owning one of these NFTs implies therefore also participating in social activity on Twitter.</p><p>In order to identify the interactions and connections that were formed across the communities of each project, we performed as a first analysis one that aimed to identify common Twitter users and Etehereum wallets. For each collection we defined: (i) the list of Twitter users who have posted at least one tweet attributable to a collection (i.e., mentioning the official account, or using one of the hashtags defined in Table 1), (ii) the list of Ethereum wallets that have purchased at least one of the tokens in the collection. Figure 3a depicts a matrix showing for each cell (8, 9) the number of common Twitter users between the project shown in the i-row and the one shown in the j-column. The matrix can be read row by row: for each row i, the total number of users is given by the cell on the diagonal (i,i), the cells on the i-th row are then normalized to this. Similarly, it can be read column by column. The same considerations can be made when considering the Ethereum wallets that are illustrated in Figure 3b. From both of these figures we can see that the projects that dominate in terms of Twitter users and Ethereum wallets are the CryptoPunks, BAYC, Cool Cats, Gutter Cat, World of Women, and Doodles. A second type of analysis that we performed was to analyze the tweets in common between pairs of projects and represent this information as an undirected weighted graph. The graph was constructed by defining a node for each project and defining a weighted arc between projects where the weight. As the weight of each node was assigned the number of tweets and as the weight of each arc the number of common tweets</p><p>\\\n(i.e., counting the number of tweets that concern the two projects at the same time). The resulting graph is shown in Figure 4a, while the structural statistics of the graph are summarized in Table 3a. The graph consists of 18 nodes (the number of projects), and 153 arcs in a single connected component. All the nodes are connected with the remaining 17 (see average degree, transitivity and edge density): this indicates how the social community, although polarized toward a few projects, is highly connected (i.e. average clustering equal to 1). For this reason, modularity is equal to 0, i.e. having a single cluster there is no di#erence among edges within groups and edges expected on the basis of chance [11]. We successively performed a pagerank analysis to identify which nodes were the most in\"uential: results are reported in Figure 5b and we can see that the most in\"uential ones are BAYC, CryptoPunks, Cool Cats, Gutter Cat, World of Women, and Doodles. These are the same ones that were identi!ed in the previous analysis and, as can also be seen from Figure 6a, also the ones with the highest number of associated tweets. For each project we then tried to identify commonality with the others by going to identify the heaviest graph arcs. In other words, for each project we identi!ed the three most related by going for the ones with the most tweets in common. Table 3b summarizes these results: you can see that the BAYC are most often present and most connected with the other projects.</p>","contentLength":4644,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Recruiters, We Need to Rethink Code Tests in Technical Hiring","url":"https://hackernoon.com/recruiters-we-need-to-rethink-code-tests-in-technical-hiring?source=rss","date":1742554693,"author":"Edward Aslin","guid":659,"unread":true,"content":"<p>Code tests filter for a specific type of candidate; those with encyclopedic knowledge of syntax, algorithms, and computer science theory…or just those who are good at completing logic puzzles in time-critical environments.</p><p>\\\nExamined critically, preliminary code tests and whiteboard coding rarely assess real-world problem-solving, collaboration and system integration. Yet, they can dictate who gets hired.</p><p>\\\nThe use case, for the kind of programmer that these tests identify, has been shrinking for some time now. The skills that define 'great' programmers, today, extend far beyond rote memorisation. Being able to apply context, bringing unique perspectives, understanding a bigger picture, and integrating components effectively are now, more than ever, far more valuable than simply grinding out code.</p><h2>The rising popularity of AI interview assistants</h2><p>The emergence of AI interview assistants that can help you solve complex coding problems in real time underscore this issue nicely. See <a href=\"https://leetcodewizard.io/?ref=equitabletech.io\">LeetCode Wizard</a>, <a href=\"https://www.parakeet-ai.com/ai-interview-assistant?ref=equitabletech.io\">ParakeetAI</a> and <a href=\"https://ultracode.ai/?ref=equitabletech.io\">Ultracode</a>.</p><p>\\\nThese tools can help candidates solve complex coding problems in real time, effectively automating the skill set that coding interviews historically prize, <a href=\"https://arxiv.org/html/2502.15770v2?ref=equitabletech.io\">sometimes with near-perfect results.</a></p><p>\\\nIf AI can pass these tests; then what exactly are we evaluating in human candidates?</p><blockquote><p>The ability to solve isolated code problems is becoming a cheap trick</p></blockquote><p>\\\nIn an era where AI can handle syntax and debugging, the value of a developer increasingly lies in the ability to think critically, adapt and apply technology in meaningful ways.</p><h2>Why code tests are likely exclusionary</h2><p>In recent history, tech has been exclusionary, in both perception and practise.</p><p>\\\nFrom perception of computers, to education and then <a href=\"https://www.equitabletech.io/building-a-better-tech-culture-why-diverse-talent-leaves-what-we-can-do/\">surviving the culture</a>. The field has long been built around a narrow definition of who belongs.</p><p>\\\nWe also know, <a href=\"https://www.local.gov.uk/sites/default/files/documents/Neurodiversity%20Slides%20200920.pdf?ref=equitabletech.io\">in the UK, 1 in 7 are considered neurodiverse</a>. Neurodiversity is a wide spectrum including dyslexia, ADHD &amp; Autism, and at its core is a difference in how the brain thinks. Assessing many neurodivergents via code test alone, would be to do them a great injustice. Many will often struggle with time-constrained, high-pressure coding tests, even if they possess strong real-world programming skills.</p><p>\\\nThis is all backed up by the fact, that <a href=\"https://lauratacho.medium.com/anonymous-code-screenings-dont-remove-bias-part-2-9ef57b52c5a5?ref=equitabletech.io\">anonymous code tests do not remove bias</a>. While theoretically, AI marking of code tests could be tweaked to eliminate bias, this would do nothing to address the systematic barriers that dictate who excels at this type of test in the first place.</p><h2>How Cheating with AI Could Shift The Paradigm</h2><p>Interestingly, these new AI assistants could level the playing field.</p><p>\\\nCandidates who might have been previously excluded for failing an isolated code test may now have a better shot. Either because;</p><ul><li>A) they use these tools to cheat</li><li>B) those applying using these tests to assess candidates may realise their futility</li></ul><p>\\\nWhile we are all taught cheating is not a good thing, do you expect people who are disproportionately discriminated against in the hiring process not to use these tools to their advantage? Especially when they have spent any length of time in industry, they will witness the kind of behaviour often required to rise to the top of the tree. And know that cheating in a code test doesn't come even close to that in terms of morality.</p><p>None of this, means that understanding code is becoming obsolete. Understanding algorithms, data structures, complex code and system architecture will remain crucial for making informed decisions. <strong><em>But people can have these abilities, and still fail a code test</em></strong>. A classic example being <a href=\"https://mxcl.dev/?ref=equitabletech.io\">Max Howell</a>, creator of the beloved dev tool <a href=\"https://brew.sh/?ref=equitabletech.io\">homebrew</a>. Who in 2015 tweeted…</p><blockquote><p>Google: 90% of our engineers use the software you wrote (Homebrew), but you can’t invert a binary tree on a whiteboard so f* off</p></blockquote><p>\\\nAn experienced hiring manager, with relevant technical experience, should be able to gauge somebody's ability from less formal interviews, and walk through of similar code the candidate has written, and products that they have worked upon.</p><p>\\\nFurther steps to assess a candidate could include</p><ul><li>Take home coding projects; giving the candidate a chance to complete the test in a safe environment</li><li>Pair programming interviews; assessing collaboration and communication</li><li>System design interviews; testing the ability to plan and scale architecture theoretically</li></ul><p>\\\nAlthough in all of these cases, you would still need to be mindful about how each could potentially discriminate against different subsets of the population.</p><p>While there cannot be an over reliance on AI, we are already seeing that encyclopedic knowledge is no longer the primary currency. Instead, the ability to leverage AI, connect ideas and solve problems in a nuanced, meaningful way is taking centre stage. Code tests alone will not help you assess this.</p><p>\\\n<a href=\"https://www.forbes.com/sites/quickerbettertech/2025/01/26/business-tech-news-zuckerberg-says-ai-will-replace-mid-level-engineers-soon/?ref=equitabletech.io\">As large language models continue to advance</a>, we will witness a fundamental shift in the profile of the “typical coder”. AI will handle the grunt work, while human developers focus on the strategy, creativity and execution; the elements that drive true innovation.</p><p>\\\nIf the core skill set of a software developer moves toward applied knowledge rather than recall and traditional CS background, we could see a broader, more diverse group of technologists entering industry and shaping the future.</p><p>\\\nBy breaking away from rigid, exclusionary hiring practices, we stand a greater chance of making software that works for everyone, not just the few.</p>","contentLength":5472,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"ASUS ROG Flow Z13 Improvements For Linux, RGB Controls For The ROG Ally","url":"https://www.phoronix.com/news/ASUS-Z13-ROG-Ally-RGB","date":1742554013,"author":"Michael Larabel","guid":774,"unread":true,"content":"<article>A set of eleven patches being worked on for the ASUS HID and platform drivers work to enhance the support for the AMD Strix Halo powered ROG Flow Z13 (2025) laptop as well as adding RGB control support for the ROG Ally gaming handheld...</article>","contentLength":237,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Stop Fighting with Date Formats—Angular’s DatePipe Has You Covered","url":"https://hackernoon.com/stop-fighting-with-date-formatsangulars-datepipe-has-you-covered?source=rss","date":1742553420,"author":"Raju Dandigam","guid":658,"unread":true,"content":"<p>Angular offers a DatePipe which helps us to show date and time in various formats by converting the raw date value into structured format using template expressions. Since every project or use case may require a specific date format, this pipe provides the flexibility to meet those needs effortlessly.</p><pre><code>{{ value_expression | date [ : format [ : timezone [ : locale ] ] ] }}\n</code></pre><p>\\\nDatePipe runs only when it detects a pure change in the input value. A pure change occurs when a primitive value is modified or the object reference changes. Modifying a Date object does not trigger the pipe to re-render. To ensure the pipe executes, a new Date object must be created.</p><p>\\\n<strong>Angular predefined format options</strong></p><p>| Option | Equivalent to | Examples (given in&nbsp;&nbsp;locale) |\n|----|----|----|\n|  |  |  |\n|  |  |  |\n|  |  | <code>June 15, 2015 at 9:03:01 AM GMT+1</code> |\n|  | <code>'EEEE, MMMM d, y, h:mm:ss a zzzz'</code> | <code>Monday, June 15, 2015 at 9:03:01 AM GMT+01:00</code> |\n|  |  |  |\n|  |  |  |\n|  |  |  |\n|  |  |  |\n|  |  |  |\n|  |  |  |\n|  |  |  |</p><p>We can also construct a format string using symbols to define the components of a date-time value as defined in the official documentation <a href=\"https://angular.dev/api/common/DatePipe#custom-format-options\">here</a>.</p><p>In this post, we'll walk through setting up a simple project with a  component, implementing various date formats, and testing the changes using Google Chrome Developer Tools' sensor features.</p><p>\\\nInstall angular if it is not already installed</p><pre><code>npm install -g @angular/cli\n</code></pre><p>\\\nCreate an angular app and change to directory</p><pre><code>ng new angular-examples\ncd angular-examples\n</code></pre><p>\\\nGenerate new component in the components folder</p><pre><code>ng generate component date-pipe-example src/app/components\n</code></pre><p>\\\nAdding a direct route  in the  file to the example component for testing purposes</p><pre><code>import { Routes } from '@angular/router';\nimport { DatePipeExampleComponent } from '../app/components/date-pipe-example/date-pipe-example.component';\n\nexport const routes: Routes = [\n    {\n        path: 'datepipe',\n        component: DatePipeExampleComponent\n    }\n];\n</code></pre><p>\\\nNow, let's add  to the component <code>date-pipe-example.component.ts</code> and include various date formats in the template.</p><pre><code>import { Component } from '@angular/core';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n  selector: 'app-date-pipe-example',\n  imports: [DatePipe],\n  templateUrl: './date-pipe-example.component.html',\n  styleUrl: './date-pipe-example.component.scss'\n})\nexport class DatePipeExampleComponent {\n  currentDate = new Date();\n}\n</code></pre><p>\\\nTemplate <code>date-pipe-example.component.html</code>  with default format without any pipe</p><pre><code>&lt;main class=\"main-container\"&gt;\n    &lt;article class=\"container\"&gt;\n        &lt;header&gt;\n            &lt;h1&gt;Welcome to Angular Date pipe examples&lt;/h1&gt;\n          &lt;/header&gt;\n          &lt;section&gt;\n            &lt;section&gt;\n                &lt;h4&gt;Current date in Default format&lt;/h4&gt;\n                &lt;div&gt;input: &lt;i&gt;currentDate&lt;/i&gt;&lt;/div&gt;\n                &lt;p&gt;{{ currentDate}}&lt;/p&gt;\n            &lt;/section&gt;  \n          &lt;/section&gt;\n    &lt;/article&gt;\n&lt;/main&gt;\n</code></pre><pre><code>Wed Mar 19 2025 13:34:59 GMT-0700 (Pacific Daylight Time)\n</code></pre><p>\\\nHere are various formats with input and output</p><p><code>date-pipe-example.component.html</code></p><pre><code>&lt;main class=\"main-container\"&gt;\n    &lt;article class=\"container\"&gt;\n        &lt;header&gt;\n            &lt;h1&gt;Welcome to Angular Date pipe examples&lt;/h1&gt;\n          &lt;/header&gt;\n          &lt;section&gt;\n            &lt;section&gt;\n                &lt;h4&gt;Current date in Default format&lt;/h4&gt;\n                &lt;div&gt;input: &lt;i&gt;currentDate&lt;/i&gt;&lt;/div&gt;\n                &lt;p&gt;{{ currentDate}}&lt;/p&gt;\n            &lt;/section&gt;  \n            &lt;section&gt;\n                &lt;h4&gt;Current date with &lt;i&gt;date&lt;/i&gt; pipe&lt;/h4&gt;\n                &lt;div&gt;input: &lt;i&gt;currentDate | date&lt;/i&gt;&lt;/div&gt;\n                &lt;p&gt;{{ currentDate | date }}&lt;/p&gt;\n            &lt;/section&gt;  \n            &lt;section&gt;\n                &lt;h4&gt;Current date with &lt;i&gt;date&lt;/i&gt; pipe and &lt;i&gt;short&lt;/i&gt; format&lt;/h4&gt;\n                &lt;div&gt;input: &lt;i&gt;currentDate | date: 'short'&lt;/i&gt;&lt;/div&gt;\n                &lt;p&gt;{{ currentDate | date: 'short'}}&lt;/p&gt;\n            &lt;/section&gt;  \n            &lt;section&gt;\n                &lt;h4&gt;Current date with &lt;i&gt;date&lt;/i&gt; pipe and &lt;i&gt;mediumTime&lt;/i&gt; format&lt;/h4&gt;\n                &lt;div&gt;input: &lt;i&gt;currentDate | date: 'mediumTime'&lt;/i&gt;&lt;/div&gt;\n                &lt;p&gt;{{ currentDate | date: 'mediumTime'}}&lt;/p&gt;\n            &lt;/section&gt; \n            &lt;section&gt;\n                &lt;h4&gt;Current date with &lt;i&gt;date&lt;/i&gt; pipe and &lt;i&gt;custom&lt;/i&gt; format&lt;/h4&gt;\n                &lt;div&gt;input: &lt;i&gt;currentDate | date: 'yyyy-MM-dd HH:mm:ss'&lt;/i&gt;&lt;/div&gt;\n                &lt;p&gt;{{ currentDate | date: 'yyyy-MM-dd HH:mm:ss'}}&lt;/p&gt;\n            &lt;/section&gt; \n            &lt;section&gt;\n                &lt;h4&gt;Current date with &lt;i&gt;date&lt;/i&gt; pipe and &lt;i&gt;medium&lt;/i&gt; format and &lt;i&gt;time&lt;/i&gt; zone&lt;/h4&gt;\n                &lt;div&gt;input: &lt;i&gt;currentDate | date: 'medium':'IST'&lt;/i&gt;&lt;/div&gt;\n                &lt;p&gt;{{ currentDate | date: 'medium':'IST' }}&lt;/p&gt;\n            &lt;/section&gt; \n            &lt;section&gt;\n                &lt;h4&gt;Current date with &lt;i&gt;date&lt;/i&gt; pipe and &lt;i&gt;medium&lt;/i&gt; format and &lt;i&gt;time zone&lt;/i&gt; and &lt;i&gt;locale&lt;/i&gt;&lt;/h4&gt;\n                &lt;div&gt;input: &lt;i&gt;currentDate | date: 'medium':'GMT':'en-GB'&lt;/i&gt;&lt;/div&gt;\n                &lt;p&gt;{{ currentDate | date: 'medium':'GMT':'en-GB' }}&lt;/p&gt;\n            &lt;/section&gt; \n          &lt;/section&gt;\n    &lt;/article&gt;\n&lt;/main&gt;\n</code></pre><pre><code>Current date having date pipe\ninput: currentDate | date\n\noutput:\nMar 19, 2025\n\nCurrent date having date pipe and short format\ninput: currentDate | date: 'short'\n\noutput:\n3/19/25, 1:34 PM\n\nCurrent date having date pipe and mediumTime format\ninput: currentDate | date: 'mediumTime'\n\noutput:\n1:34:59 PM\n\nCurrent date having date pipe and custom format\ninput: currentDate | date: 'yyyy-MM-dd HH:mm:ss'\n\noutput:\n2025-03-19 13:34:59\n\nCurrent date having date pipe and medium format and time zone\ninput: currentDate | date: 'medium':'IST'\n\noutput:\nMar 19, 2025, 1:34:59 PM\n\nCurrent date having date pipe and medium format and time zone and locale\ninput: currentDate | date: 'medium':'GMT':'en-GB'\n\noutput:\nMar 19, 2025, 8:34:59 PM\n</code></pre><p>\\\nThe fully deployed example is available <a href=\"https://angular-examples-raju.vercel.app/datepipe\">here</a>.</p><p>\\\n<strong>Testing Across Time Zones with Chrome DevTools</strong></p><p>This guide provides insight into how the Angular Date Pipe works with different formats. However, a common challenge is testing across various time zones and locales to see how the dates appear in the UI. In such cases, we can leverage developer tools' sensor settings for live testing.</p><p>\\\n<strong>Google Chrome Developer Console Sensor Tools</strong></p><p>The <code>Google Chrome Developer Console Sensor Tools</code> allow developers to simulate different environmental conditions for testing web applications. These tools are part of the Chrome DevTools and are useful for testing scenarios like geolocation, device orientation, and accelerometer values.</p><p>Depending on your operating system, press the following to open the  first then&nbsp;.</p><p>On Windows, Linux, or <code>ChromeOS, Control+Shift+I</code></p><p>On Windows, <code>Linux, or ChromeOS, Control+Shift+P</code></p><p>\\n Alternatively, we can open the, click the three-dot menu, go to , and select , as shown in the screenshot below.</p><p>\\\nBy default Sensors will  option selected.</p><p>\\\nNext, open the Location dropdown, where you’ll find several predefined locations to override. Select a location from the list, refresh the page, and observe the changes in the result.</p><p>\\\nWe could also add new locations by clicking on  button then ‘ in the Locations settings panel.</p><p>\\\nAt times, the user or browser location may not be available, which can also be tested using the  dropdown with option  \\n </p><p>\\\nThe full repository for this guide project can be found <a href=\"https://github.com/rajudandigam/angular-examples\">here</a>.</p><p>In this post, we explored the power of Angular’s DatePipe and its flexibility in formatting dates and times to meet the varying needs of different projects. We built a simple Angular component to show various date formats and explained how to use Google Chrome Developer Tools’ sensor features to test date displays across different time zones and locales.</p><p>\\\nFor large scale projects that cover multiple time zones and have users from all over the world, handling dates and times correctly is important to providing a smooth and reliable user experience. Angular’s DatePipe eases this challenge by providing customizable formatting options and a smooth integration with different time zones and locales.&nbsp; Using Chrome’s DevTools to test date formats in different environmental conditions, developers can ensure that the applications they build are correct for users around the world and, in turn, make the application more usable and reliable.</p>","contentLength":8308,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Enhance Your Code Architecture With SOLID Principles (with Swift Examples)","url":"https://hackernoon.com/enhance-your-code-architecture-with-solid-principles-with-swift-examples?source=rss","date":1742553186,"author":"Maxim Egorov","guid":657,"unread":true,"content":"<p>Good architecture is not just about writing working code, but about creating code that is easy to extend, test, and maintain.&nbsp;This is exactly why the SOLID principles were formulated - five key foundations of object-oriented design proposed by&nbsp;&nbsp;(Robert C. Martin).</p><p>\\\nFollowing these principles helps achieve several important benefits:</p><ul><li>, making modifications easier.</li><li><strong>Minimizes the risk of errors</strong>&nbsp;when making changes.</li><li><strong>Makes the system more flexible</strong>&nbsp;and easily extensible.</li><li>&nbsp;and automation.</li></ul><p>SOLID is an acronym consisting of five principles:</p><ol><li><strong>S - Single Responsibility Principle</strong>&nbsp;- Each object should perform&nbsp;only one task&nbsp;and have&nbsp;only one reason to change.</li><li><strong>O - Open/Closed Principle</strong>&nbsp;- Code should be&nbsp;open for extension but closed for modification.</li><li><strong>L - Liskov Substitution Principle</strong>&nbsp;-&nbsp;Subclasses must fully replace the parent class&nbsp;without altering its behavior.</li><li><strong>I - Interface Segregation Principle</strong>&nbsp;- Classes should not be&nbsp;forced to implement methods they do not need.</li><li><strong>D - Dependency Inversion Principle</strong>&nbsp;- Modules should depend&nbsp;on abstractions rather than concrete implementations.</li></ol><p>\\\nIn this article, we will break down each of these principles using Swift code examples, explore common mistakes that violate these principles, and learn how to fix them. The examples will be easy to understand, so no complex language constructs will be used.</p><p>\\\nGrab some coffee, cookies, and let's dive into SOLID! 🚀</p><h2><strong>S - Single Responsibility Principle (SRP)</strong></h2><p>According to this principle, each object should have only one responsibility, and that responsibility should be encapsulated within it.</p><p>\\\n The User class contains both user logic and email-sending logic.</p><pre><code>final class User {\n    let name: String\n    let email: String\n\n    init(name: String, email: String) {\n        self.name = name\n        self.email = email\n    }\n\n    func sendEmail(message: String) {\n        print(\"Sending email to \\(email) with message: \\(message)\")\n    }\n}\n\nlet user = User(name: \"Tim\", email: \"ceo@apple.com\")\nuser.sendEmail(message: \"Hello!\")\n</code></pre><p>Separate responsibilities between&nbsp;&nbsp;and&nbsp;.</p><pre><code>final class User {\n    let name: String\n    let email: String\n\n    init(name: String, email: String) {\n        self.name = name\n        self.email = email\n    }\n}\n\nfinal class EmailService {\n    func sendEmail(to user: User, message: String) {\n        print(\"Sending email to \\(user.email) with message: \\(message)\")\n    }\n}\n\nlet user = User(name: \"Tim\", email: \"ceo@apple.com\")\nlet emailService = EmailService()\nemailService.sendEmail(to: user, message: \"Hello!\")\n</code></pre><p>Now&nbsp;&nbsp;is responsible&nbsp;, while&nbsp;&nbsp;handles email sending. This makes the code easier to maintain and extend.</p><h2><strong>O - Open/Closed Principle (OCP)</strong></h2><p>This principle states that&nbsp;code should be open for extension but closed for modification.</p><p>\\\n: The function uses conditional checks to determine the payment method. Adding a new payment method requires modifying this code.</p><pre><code>final class PaymentProcessor {\n    func processPayment(type: String, amount: Double) {\n        if type == \"credit_card\" {\n            print(\"Pay amount: \\(amount) with credit card\")\n        } else if type == \"paypal\" {\n            print(\"Pay amount: \\(amount) via PayPal\")\n        } else {\n            print(\"Unknown payment method\")\n        }\n    }\n}\n\nlet processor = PaymentProcessor()\nprocessor.processPayment(type: \"credit_card\", amount: 100.0)\nprocessor.processPayment(type: \"paypal\", amount: 200.0)\n</code></pre><p>Instead of using&nbsp;&nbsp;statements, we can&nbsp; - the&nbsp;&nbsp;protocol. This allows adding new payment methods&nbsp;.</p><pre><code>protocol PaymentMethod {\n    func pay(amount: Double)\n}\n\nfinal class CreditCardPayment: PaymentMethod {\n    func pay(amount: Double) {\n        print(\"Pay amount: \\(amount) with credit card\")\n    }\n}\n\nfinal class PayPalPayment: PaymentMethod {\n    func pay(amount: Double) {\n        print(\"Pay amount: \\(amount) via PayPal\")\n    }\n}\n\nfinal class PaymentProcessor {\n    func processPayment(method: PaymentMethod, amount: Double) {\n        method.pay(amount: amount)\n    }\n}\n\nlet processor = PaymentProcessor()\nlet creditCard = CreditCardPayment()\nlet paypal = PayPalPayment()\n\nprocessor.processPayment(method: creditCard, amount: 100.0)\nprocessor.processPayment(method: paypal, amount: 200.0)\n</code></pre><p>\\\nNow, if a new payment method (e.g.,&nbsp;) is introduced,&nbsp; - we just add a new class implementing&nbsp;.</p><h2><strong>L - Liskov Substitution Principle (LSP)</strong></h2><p>Subclasses should replace the parent class without changing the program's logic.</p><p>\\\n: The base class&nbsp;&nbsp;has a&nbsp;&nbsp;method, but if we create&nbsp;, it&nbsp;<strong>should not be refueled with gasoline</strong> - it should be charged instead.</p><pre><code>final class Car {\n    func drive() {\n        print(\"Drive\")\n    }\n\n    func refuel() {\n        print(\"Refuel\")\n    }\n}\n\nclass GasolineCar: Car { }\n\nclass ElectricCar: Car {\n    override func refuel() {\n        fatalError(\"Can't fuel an electric car with gasoline!\")\n    }\n}\n\nfunc refuelCar(_ car: Car) {\n    car.refuel()\n}\n\nlet tesla = ElectricCar()\nrefuelCar(tesla) // ❌ Runtime error\n</code></pre><p>\\\nLiskov Substitution Principle (LSP) &nbsp;that a subclass should&nbsp;&nbsp;replace its parent class without breaking functionality. Here, the function&nbsp;&nbsp;expects&nbsp;any&nbsp;&nbsp;to be refueled, but&nbsp;.</p><p>Separate interfaces for refuelable and chargeable vehicles.</p><pre><code>class Car {\n    func drive() {\n        print(\"Drive\")\n    }\n}\n\nprotocol Fuelable {\n    func refuel()\n}\n\nprotocol Chargeable {\n    func charge()\n}\n\nfinal class GasolineCar: Car, Fuelable {\n    func refuel() {\n        print(\"Refuel\")\n    }\n}\n\nfinal class ElectricCar: Car, Chargeable {\n    func charge() {\n        print(\"Charge\")\n    }\n}\n\n// We have a function that only works with fuelable cars\nfunc refuelCar(_ car: Fuelable) {\n    car.refuel()\n}\n\nlet bmw = GasolineCar()\nrefuelCar(bmw) // ✅\n\nlet tesla = ElectricCar()\n// refuelCar(tesla) // ❌ Compile-time error, which is good! Now we can't mistakenly pass an electric car.\n</code></pre><p><strong>Now there is no LSP violation</strong>:</p><ul><li>Subclasses of&nbsp;&nbsp;are compatible.</li><li>&nbsp;can be refueled with gasoline.</li><li><strong>does not inherit the unnecessary</strong>&nbsp;method&nbsp;but uses&nbsp;&nbsp;instead.</li></ul><p>:::tip\nIf you have&nbsp;<strong>classes that behave differently</strong>, it's better to&nbsp;<strong>separate them through interfaces</strong>&nbsp;rather than forcing them to inherit methods they don’t need. This not only adheres to the Liskov Substitution Principle (LSP) but also improves code readability and maintainability.</p><h2><strong>I - Interface Segregation Principle (ISP)</strong></h2><p>The principle states that&nbsp;classes should not be forced to implement methods they don’t need.</p><p>\\\n: We have a&nbsp;&nbsp;interface that contains&nbsp;<strong>methods for all types of transport</strong>&nbsp;-&nbsp;,&nbsp;, and&nbsp;. However,&nbsp;<strong>a car cannot fly, and a boat cannot drive on the road</strong>.</p><pre><code>protocol Vehicle {\n    func drive()\n    func sail()\n    func fly()\n}\n\nclass Car: Vehicle {\n    func drive() {\n        print(\"Drive\")\n    }\n\n    func sail() {\n        fatalError(\"A car cannot sail.\")\n    }\n\n    func fly() {\n        fatalError(\"A car cannot fly.\")\n    }\n}\n\nclass Boat: Vehicle {\n    func drive() {\n        fatalError(\"A boat cannot drive.\")\n    }\n\n    func sail() {\n        print(\"Sail\")\n    }\n\n    func fly() {\n        fatalError(\"A boat cannot fly.\")\n    }\n}\n\nclass Airplane: Vehicle {\n    func drive() {\n        fatalError(\"An airplane cannot drive.\")\n    }\n\n    func sail() {\n        fatalError(\"An airplane cannot sail.\")\n    }\n\n    func fly() {\n        print(\"Fly\")\n    }\n}\n</code></pre><ul><li>&nbsp;is forced to implement&nbsp;&nbsp;and&nbsp;, even though it doesn’t need them.</li><li>&nbsp;must have a&nbsp;&nbsp;method, but&nbsp;<strong>boats don’t drive on roads</strong>.</li><li>&nbsp;is also required to implement irrelevant methods.</li></ul><ul><li>If an interface forces a class to implement unnecessary methods, the code becomes fragile: any change to the interface will affect&nbsp;, even if they don’t use the new methods.</li><li>The code is harder to read: a developer seeing&nbsp;&nbsp;might wonder if a car can actually sail, reducing code predictability.</li><li>If we later add a&nbsp;,&nbsp;, or&nbsp;, we will have to modify the interface again.</li></ul><p>We separate interfaces into&nbsp;distinct responsibilities.</p><pre><code>protocol Drivable {\n    func drive()\n}\n\nprotocol Sailable {\n    func sail()\n}\n\nprotocol Flyable {\n    func fly()\n}\n\nfinal class Car: Drivable {\n    func drive() {\n        print(\"Drive\")\n    }\n}\n\nfinal class Boat: Sailable {\n    func sail() {\n        print(\"Sail\")\n    }\n}\n\nfinal class Airplane: Flyable {\n    func fly() {\n        print(\"Fly\")\n    }\n}\n</code></pre><p>\\\n: classes implement only the methods they need. Adding new types of transport (e.g.,&nbsp;) no longer breaks existing code.</p><pre><code>final class Seaplane: Flyable, Sailable {\n    func fly() {\n        print(\"Fly\")\n    }\n\n    func sail() {\n        print(\"Sail\")\n    }\n}\n</code></pre><p>By&nbsp;<strong>separating interfaces according to their purpose</strong>, we make the code&nbsp;<strong>flexible, maintainable, and logical</strong>.</p><p>:::tip\nThe difference between&nbsp;<strong>Liskov Substitution Principle (LSP)</strong>&nbsp;and&nbsp;<strong>Interface Segregation Principle (ISP)</strong>&nbsp;is:</p><ul><li>&nbsp;deals with&nbsp;&nbsp;and requires that&nbsp;<strong>subclasses can replace the parent class without changing its behavior</strong>.</li><li>&nbsp;deals with&nbsp;&nbsp;and ensures that&nbsp;<strong>classes are not forced to implement methods they don’t need</strong>.</li></ul><h2><strong>D - Dependency Inversion Principle (DIP)</strong></h2><p>The principle states that:</p><ol><li>High-level modules should not depend on low-level modules.</li><li>Both should depend on abstractions (protocols, interfaces).</li></ol><p>\\\n: The&nbsp;&nbsp;class directly depends on&nbsp;. If we want to switch to a different database, we will have to modify the&nbsp;&nbsp;code.</p><pre><code>final class MySQLDatabase {\n    func saveOrder(order: String) {\n        print(\"MySQL save order: \\(order)\")\n    }\n}\n\nfinal class OrderService {\n    let database = MySQLDatabase() // 🚨 Strong dependency\n\n    func createOrder(order: String) {\n        print(\"Creating order: \\(order)\")\n        database.saveOrder(order: order) // Strong relation with MySQLDatabase\n    }\n}\n\n// Using\nlet service = OrderService()\nservice.createOrder(order: \"#123\")\n</code></pre><ul><li>If we need to replace&nbsp;&nbsp;with&nbsp;,&nbsp;&nbsp;code.</li><li>This code is&nbsp;&nbsp;since we cannot substitute a fake database for testing.</li></ul><p>We introduce&nbsp;&nbsp;so that&nbsp;&nbsp;depends on an interface rather than a specific database implementation.</p><pre><code>protocol Database {\n    func saveOrder(order: String)\n}\n\nfinal class MySQLDatabase: Database {\n    func saveOrder(order: String) {\n        print(\"MySQL save order: \\(order)\")\n    }\n}\n\nfinal class PostgreSQLDatabase: Database {\n    func saveOrder(order: String) {\n        print(\"PostgreSQL save order: \\(order)\")\n    }\n}\n\nfinal class OrderService {\n    let database: Database // 💡 Now it's an abstraction\n\n    init(database: Database) {\n        self.database = database\n    }\n\n    func createOrder(order: String) {\n        print(\"Creating order: \\(order)\")\n        database.saveOrder(order: order) // Working with an abstraction\n    }\n}\n\n// Using\nlet mysqlDB = MySQLDatabase()\nlet postgreDB = PostgreSQLDatabase()\n\nlet service1 = OrderService(database: mysqlDB)\nservice1.createOrder(order: \"#123\") // MySQL\n\nlet service2 = OrderService(database: postgreDB)\nservice2.createOrder(order: \"#456\") // PostgreSQL\n</code></pre><p>Now we can easily switch from&nbsp;&nbsp;to&nbsp;.</p><p>The code is now&nbsp;<strong>more flexible and easier to test</strong>&nbsp;– we can pass&nbsp;&nbsp;for testing.</p><p><strong>no longer depends on a specific database implementation</strong>&nbsp;but works with an abstraction ().</p><p>:::tip\n: Depend on&nbsp;, not concrete classes.</p><p>By applying SOLID principles, you create code that remains stable, adaptable, and resistant to unnecessary complexity. These principles help prevent projects from turning into unmanageable chaos as they grow. Writing code with SOLID in mind ensures better organization, making it easier to maintain, test, and extend over time.</p><p>\\\nThis leads to a more structured and predictable development process.</p><p>\\\nAlthough SOLID is not a rigid set of rules, it helps developers design scalable and flexible architectures. As a result, teams spend less time fixing issues and more time innovating. 🚀</p>","contentLength":11557,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Nvidia CEO Huang Says He Was Wrong About Timeline For Quantum","url":"https://tech.slashdot.org/story/25/03/21/0439241/nvidia-ceo-huang-says-he-was-wrong-about-timeline-for-quantum?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742553000,"author":"msmash","guid":210,"unread":true,"content":"Nvidia CEO Jensen Huang on Thursday walked back comments he made in January, when he cast doubt on whether useful quantum computers would hit the market in the next 15 years. From a report: At Nvidia's \"Quantum Day\" event, part of the company's annual GTC Conference, Huang admitted that his comments came out wrong. \"This is the first event in history where a company CEO invites all of the guests to explain why he was wrong,\" Huang said. \n\nIn January, Huang sent quantum computing stocks reeling when he said 15 years was \"on the early side\" in considering how long it would be before the technology would be useful. He said at the time that 20 years was a timeframe that \"a whole bunch of us would believe.\" In his opening comments on Thursday, Huang drew comparisons between pre-revenue quantum companies and Nvidia's early days. He said it took over 20 years for Nvidia to build out its software and hardware business. \n\nHe also expressed surprise that his comments were able to move markets, and joked he didn't know that certain quantum computing companies were publicly traded. \"How could a quantum computer company be public?\" Huang said.","contentLength":1148,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Dynamic EPP & Raw EPP Features Coming To AMD P-State Driver","url":"https://www.phoronix.com/news/AMD-P-State-Raw-EPP-Dynamic","date":1742552920,"author":"Michael Larabel","guid":773,"unread":true,"content":"<article>The AMD P-State Linux kernel driver for CPU frequency scaling with modern Ryzen processors has been working out quite well and proving very effective over the prior ACPI CPUFreq generic driver use. Beyond recently being extended to becoming the default for EPYC 9005 \"Turin\" processors, AMD P-State has recently been seeing some patches for additional feature work...</article>","contentLength":367,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The Future of AI Increasingly Appears to be Decentralized","url":"https://hackernoon.com/the-future-of-ai-increasingly-appears-to-be-decentralized?source=rss","date":1742552774,"author":"Elsa","guid":656,"unread":true,"content":"<p>Picture this: training a single AI model costs more than building a skyscraper. GPT-4’s price tag? A cool $169 million. That’s the reality of today’s AI ecosystem, where giants hold the keys to the computational kingdom. However, centralized AI is a house of cards.</p><ul><li>Costs are astronomical: Startups and researchers? They’re locked out.</li><li>Scalability is a myth: Demand for compute grows faster than Moore’s Law.</li><li>Single points of failure: One AWS outage can paralyze industries.</li></ul><p>\\\nDecentralized platforms like Nidum.ai, bittensor challenge this status quo by redefining access to computational power. By aggregating underutilized hardware—idle GPUs in gaming rigs, decommissioned mining farms, and regional data centers—these networks create a global resource pool that operates on principles of shared efficiency. For startups and researchers, this isn’t just about affordability—it’s about survival in a market where OpenAI’s $100 million training runs set an untenable precedent.</p><h2>How Decentralization Unshackles AI</h2><p>Enter blockchain—the tech behind Bitcoin—and its rebellious ethos. Imagine a global network where anyone can contribute compute power, like Airbnb for GPUs. By distributing computational resources across a global network of nodes, decentralized AI can reduce costs, improve scalability, and enhance transparency. More and more companies have realized the importance of AI - bitsCrunch just acquired Nidum.ai a few weeks ago, which is one of examples of this movement, providing a decentralized AI computing platform that connects developers with distributed resources worldwide.&nbsp;</p><p>\\\nBelow is a flowchart showing how data and computational resources move in centralized systems versus decentralized systems (e.g., Nidum, Aleph Cloud). Decentralized network of nodes to provide high-performance computing (HPC) capabilities for AI developers, and it allows developers to embed AI-driven features—predictive analytics, personalized recommendations—directly into smart contracts. The result is a new class of hybrid applications.</p><p>\\\nEach node’s contribution is logged on-chain. No more shadowy data sources. No more biased models escaping scrutiny. It’s accountability, baked into code. But here’s the real magic: tokenized incentives. Contribute compute power, earn crypto. This isn’t just tech utopianism—it’s a self-sustaining economy where everyone wins.</p><p>Decentralized networks rely on tokenized incentives to sustain participation. Contributors who lease idle GPU capacity earn cryptocurrency, creating a circular economy where resource providers fund their own AI projects. While this model has critics—some argue it risks commodifying compute power—it mirrors proven sharing-economy principles. Airbnb and Uber demonstrated that underutilized assets (homes, cars) can be productized at scale; decentralized AI applies this logic to silicon.</p><p>\\\nPicture this: A chatbot that spills the raw truth about a smart contract, running on your device or our decentralised setup. Or a DeFi platform tapping into heavy-duty insights from a censorship-free engine, all powered by an infrastructure that’s open to everyone.</p><p>\\\nThis isn’t sci-fi—it’s happening now. Gartner predicts that by 2025, 75% of enterprise data will be processed at the edge, up from 10% in 2021. Decentralized architectures are uniquely positioned to capitalize on this shift. For example, a manufacturer using Nidum’s edge nodes can deploy AI to monitor assembly line defects in real time, analyzing sensor data on-site without exposing proprietary information to third-party clouds.</p><p>The AI revolution isn’t about building god-like models—it’s about who controls them. Decentralization isn’t a buzzword; it’s the antidote to corporate capture.</p><p>\\\nThe road ahead is complex, but the direction is clear: AI’s future isn’t just decentralized. It’s inevitable.</p><p>\\\nSo, next time you hear “AI,” think beyond ChatGPT. Think about farmers, doctors, and Reddit mods reclaiming power. Because the future of AI isn’t a server farm—it’s a community.</p>","contentLength":4079,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Want AI to Actually Understand Your Code? This Tool Says It Can Help","url":"https://hackernoon.com/want-ai-to-actually-understand-your-code-this-tool-says-it-can-help?source=rss","date":1742552339,"author":"LJ","guid":655,"unread":true,"content":"<p>In this blog, we will show you how to index codebase for RAG with CocoIndex. CocoIndex is a tool to help you index and query your data. It is designed to be used as a framework to build your own data pipeline. CocoIndex provides built-in support for code base chunking, with native Tree-sitter support.</p><p><a href=\"https://en.wikipedia.org/wiki/Tree-sitter_%28parser_generator%29\">Tree-sitter</a>&nbsp;is a parser generator tool and an incremental parsing library, it is available in Rust 🦀 -&nbsp;<a href=\"https://github.com/tree-sitter/tree-sitter\">GitHub</a>. CocoIndex has built-in Rust integration with Tree-sitter to efficiently parse code and extract syntax trees for various programming languages.</p><p>\\\nCodebase chunking is the process of breaking down a codebase into smaller, semantically meaningful chunks. CocoIndex leverages Tree-sitter's capabilities to intelligently chunk code based on the actual syntax structure rather than arbitrary line breaks. These semantically coherent chunks are then used to build a more effective index for RAG systems, enabling more precise code retrieval and better context preservation.</p><p>\\\nFast pass 🚀 - you can find the full code&nbsp;<a href=\"https://github.com/cocoindex-io/cocoindex/tree/main/examples/code_embedding\">here</a>. Only ~ 50 lines of Python code for the RAG pipeline, check it out 🤗!</p><p>Please give&nbsp;<a href=\"https://github.com/cocoindex-io/cocoindex\">CocoIndex on Github</a>&nbsp;a star to support us if you like our work. Thank you so much with a warm coconut hug 🥥🤗.&nbsp;<a href=\"https://github.com/cocoindex-io/cocoindex\"></a></p><p>If you don't have Postgres installed, please refer to the&nbsp;<a href=\"https://cocoindex.io/docs/getting_started/installation\">installation guide</a>. CocoIndex uses Postgres to manage the data index, we have it on our roadmap to support other databases, including the in-progress ones. If you are interested in other databases, please let us know by creating a&nbsp;<a href=\"https://github.com/cocoindex-io/cocoindex/issues\">GitHub issue</a>&nbsp;or&nbsp;<a href=\"https://discord.com/invite/zpA9S2DR7s\">Discord</a>.</p><p>Let's define the cocoIndex flow to read from a codebase and index it for RAG.</p><p>\\\nThe flow diagram above illustrates how we'll process our codebase:</p><ol><li>Read code files from the local filesystem</li><li>Split code into semantic chunks using Tree-sitter</li><li>Generate embeddings for each chunk</li><li>Store in a vector database for retrieval</li></ol><p>\\\nLet's implement this flow step by step.</p><h3>1. Add the codebase as a source.<a href=\"https://cocoindex.io/blogs/index-code-base-for-rag#1-add-the-codebase-as-a-source\">​</a></h3><pre><code>@cocoindex.flow_def(name=\"CodeEmbedding\")\ndef code_embedding_flow(flow_builder: cocoindex.FlowBuilder, data_scope: cocoindex.DataScope):\n    \"\"\"\n    Define an example flow that embeds files into a vector database.\n    \"\"\"\n    data_scope[\"files\"] = flow_builder.add_source(\n        cocoindex.sources.LocalFile(path=\"../..\",\n                                    included_patterns=[\"*.py\", \"*.rs\", \"*.toml\", \"*.md\", \"*.mdx\"],\n                                    excluded_patterns=[\".*\", \"target\", \"**/node_modules\"]))\n    code_embeddings = data_scope.add_collector()\n</code></pre><p>In this example, we are going to index the cocoindex codebase from the root directory. You can change the path to the codebase you want to index. We will index all the files with the extensions of&nbsp;,&nbsp;,&nbsp;,&nbsp;,&nbsp;, and skip directories starting with ., target (in the root) and node_modules (under any directory).</p><p>&nbsp;will create a table with the following sub fields, see&nbsp;<a href=\"https://cocoindex.io/docs/ops/sources\">documentation</a>&nbsp;here.</p><ul><li>&nbsp;(key, type:&nbsp;): the filename of the file, e.g.&nbsp;</li><li>&nbsp;(type:&nbsp;&nbsp;if&nbsp;&nbsp;is&nbsp;, otherwise&nbsp;): the content of the file</li></ul><h3>2. Process each file and collect the information.<a href=\"https://cocoindex.io/blogs/index-code-base-for-rag#2-process-each-file-and-collect-the-information\">​</a></h3><p>First let's define a function to extract the extension of a filename while processing each file. You can find the documentation for custom function&nbsp;<a href=\"https://cocoindex.io/docs/core/custom_function\">here</a>.</p><pre><code>@cocoindex.op.function()\ndef extract_extension(filename: str) -&gt; str:\n    \"\"\"Extract the extension of a filename.\"\"\"\n    return os.path.splitext(filename)[1]\n</code></pre><p>\\\nThen we are going to process each file and collect the information.</p><pre><code>    # ...\n    with data_scope[\"files\"].row() as file:\n        file[\"extension\"] = file[\"filename\"].transform(extract_extension)\n</code></pre><p>\\\nHere we extract the extension of the filename and store it in the&nbsp;&nbsp;field. for example, if the filename is&nbsp;, the&nbsp;&nbsp;field will be&nbsp;.</p><h4>2.2 Split the file into chunks<a href=\"https://cocoindex.io/blogs/index-code-base-for-rag#22-split-the-file-into-chunks\">​</a></h4><p>Next, we are going to split the file into chunks. We use the&nbsp;&nbsp;function to split the file into chunks. You can find the documentation for the function&nbsp;<a href=\"https://cocoindex.io/docs/core/functions#splitrecursively\">here</a>.</p><p>\\\nCocoIndex provides built-in support for Tree-sitter, so you can pass in the language to the&nbsp;&nbsp;parameter. To see all supported language names and extensions, see the documentation&nbsp;<a href=\"https://cocoindex.io/docs/ops/functions#splitrecursively\">here</a>. All the major languages are supported, e.g., Python, Rust, JavaScript, TypeScript, Java, C++, etc. If it's unspecified or the specified language is not supported, it will be treated as plain text.</p><pre><code>  with data_scope[\"files\"].row() as file:\n    # ...\n      file[\"chunks\"] = file[\"content\"].transform(\n            cocoindex.functions.SplitRecursively(),\n            language=file[\"extension\"], chunk_size=1000, chunk_overlap=300) \n</code></pre><p>We will use the&nbsp;&nbsp;function to embed the chunks. You can find the documentation for the function&nbsp;<a href=\"https://cocoindex.io/docs/ops/functions#sentencetransformerembed\">here</a>. There are 12k models supported by 🤗&nbsp;<a href=\"https://huggingface.co/models?other=sentence-transformers\">Hugging Face</a>. You can just pick your favorite model.</p><pre><code> def code_to_embedding(text: cocoindex.DataSlice) -&gt; cocoindex.DataSlice:\n    \"\"\"\n    Embed the text using a SentenceTransformer model.\n    \"\"\"\n    return text.transform(\n        cocoindex.functions.SentenceTransformerEmbed(\n            model=\"sentence-transformers/all-MiniLM-L6-v2\"))\n</code></pre><p>\\\nThen for each chunk, we will embed it using the&nbsp;&nbsp;function. and collect the embeddings to the&nbsp;&nbsp;collector.</p><p>\\\nWe extract this codeembedding function instead of directly calling transform(cocoindex.functions.SentenceTransformerEmbed(…)) in place.</p><p>\\\nThis is because we want to make this one shared between the indexing flow building and the query handler definition. Alternatively, to make it simpler. It's also OK to avoid this extra function and directly do things in place - not a big deal to copy paste a little bit, we did this for the&nbsp;<a href=\"https://cocoindex.io/docs/getting_started/quickstart\">quickstart</a>&nbsp;project.</p><pre><code>    with data_scope[\"files\"].row() as file:\n        # ...\n        with file[\"chunks\"].row() as chunk:\n            chunk[\"embedding\"] = chunk[\"text\"].call(code_to_embedding)\n            code_embeddings.collect(filename=file[\"filename\"], location=chunk[\"location\"],\n                                    code=chunk[\"text\"], embedding=chunk[\"embedding\"])\n</code></pre><h4>2.4 Collect the embeddings<a href=\"https://cocoindex.io/blogs/index-code-base-for-rag#24-collect-the-embeddings\">​</a></h4><p>Finally, let's export the embeddings to a table.</p><pre><code>    code_embeddings.export(\n        \"code_embeddings\",\n        cocoindex.storages.Postgres(),\n        primary_key_fields=[\"filename\", \"location\"],\n        vector_index=[(\"embedding\", cocoindex.VectorSimilarityMetric.COSINE_SIMILARITY)])\n</code></pre><h3>3. Setup Query Handler for your index<a href=\"https://cocoindex.io/blogs/index-code-base-for-rag#3-setup-query-handler-for-your-index\">​</a></h3><p>We will use the&nbsp;<code>SimpleSemanticsQueryHandler</code>&nbsp;to query the index. Note that we need to pass in the&nbsp;&nbsp;function to the&nbsp;&nbsp;parameter. This is because the query handler will use the same embedding model as the one used in the flow.</p><pre><code>query_handler = cocoindex.query.SimpleSemanticsQueryHandler(\n    name=\"SemanticsSearch\",\n    flow=code_embedding_flow,\n    target_name=\"code_embeddings\",\n    query_transform_flow=code_to_embedding,\n    default_similarity_metric=cocoindex.VectorSimilarityMetric.COSINE_SIMILARITY)\n</code></pre><p>\\\nDefine a main function to run the query handler.</p><pre><code>@cocoindex.main_fn()\ndef _run():\n    # Run queries in a loop to demonstrate the query capabilities.\n    while True:\n        try:\n            query = input(\"Enter search query (or Enter to quit): \")\n            if query == '':\n                break\n            results, _ = query_handler.search(query, 10)\n            print(\"\\nSearch results:\")\n            for result in results:\n                print(f\"[{result.score:.3f}] {result.data['filename']}\")\n                print(f\"    {result.data['code']}\")\n                print(\"---\")\n            print()\n        except KeyboardInterrupt:\n            break\n\nif __name__ == \"__main__\":\n    load_dotenv(override=True)\n    _run()\n</code></pre><p>\\\nThe @cocoindex.main_fn() decorator initializes the library with settings loaded from environment variables. See&nbsp;<a href=\"https://cocoindex.io/docs/core/initialization\">documentation for initialization</a>for more details.</p><h2>Run the index setup &amp; update<a href=\"https://cocoindex.io/blogs/index-code-base-for-rag#run-the-index-setup--update\">​</a></h2><p>Run following commands to setup and update the index.</p><pre><code>python main.py cocoindex setup\npython main.py cocoindex update\n</code></pre><p>\\\nYou'll see the index updates state in the terminal</p><p>\\\nAt this point, you can start the cocoindex server and develop your RAG runtime against the data.</p><p>\\\nTo test your index, there are two options:</p><h3>Option 1: Run the index server in the terminal<a href=\"https://cocoindex.io/blogs/index-code-base-for-rag#option-1-run-the-index-server-in-the-terminal\">​</a></h3><p>\\\nWhen you see the prompt, you can enter your search query. for example: spec.</p><pre><code>Enter search query (or Enter to quit): spec\n</code></pre><p>\\\nYou can find the search results in the terminal</p><p>\\\nThe returned results - each entry contains score (Cosine Similarity), filename, and the code snippet that get matched. At cocoindex, we use the&nbsp;<code>cocoindex.VectorSimilarityMetric.COSINE_SIMILARITY</code>&nbsp;to measure the similarity between the query and the indexed data. You can switch to other metrics too and quickly test it out.</p><p>\\\nTo learn more about Consine Similarity, see&nbsp;<a href=\"https://en.wikipedia.org/wiki/Cosine_similarity\">Wiki</a>.</p><p>\\n Option 2: Run CocoInsight to understand your data pipeline and data index<a href=\"https://cocoindex.io/blogs/index-code-base-for-rag#option-2-run-cocoinsight-to-understand-your-data-pipeline-and-data-index\">​</a></p><p>\\\nCocoInsight is a tool to help you understand your data pipeline and data index. It connects to your local CocoIndex server with zero data retention.</p><p>\\\nCocoInsight is in Early Access now (Free) 😊 You found us! A quick 3 minute video tutorial about CocoInsight:&nbsp;<a href=\"https://www.youtube.com/watch?v=ZnmyoHslBSc\">Watch on YouTube</a>.</p><h4>Run the CocoIndex server<a href=\"https://cocoindex.io/blogs/index-code-base-for-rag#run-the-cocoindex-server\">​</a></h4><pre><code>python main.py cocoindex server -c https://cocoindex.io\n</code></pre><p>\\\nOnce the server is running, open&nbsp;<a href=\"https://cocoindex.io/\">CocoInsight</a>&nbsp;in your browser. You'll be able to connect to your local CocoIndex server and explore your data pipeline and index.</p><p>\\\nOn the right side, you can see the data flow that we defined.</p><p>\\\nOn the left side, you can see the data index in the data preview.</p><p>You can click on any row to see the details of that data entry, including the full content of code chunks and their embeddings.</p><p>We love to hear from the community! You can find us on&nbsp;<a href=\"https://github.com/cocoindex-io/cocoindex\">Github</a>&nbsp;and&nbsp;<a href=\"https://discord.com/invite/zpA9S2DR7s\">Discord</a>.</p><p>\\\nIf you like this post and our work, please support&nbsp;<a href=\"https://github.com/cocoindex-io/cocoindex\">CocoIndex on Github</a>&nbsp;with a star ⭐. Thank you with a warm coconut hug 🥥🤗.</p>","contentLength":9666,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"The Reverse Scam (or How the Community Has Failed Crypto)","url":"https://hackernoon.com/the-reverse-scam-or-how-the-community-has-failed-crypto?source=rss","date":1742551552,"author":"WillRR","guid":654,"unread":true,"content":"<blockquote><p>Although the exit liquidity narrative is prevalent in a project, sometimes the prioritisation of holder profit is to blame for the sell pressure.</p></blockquote><p>\\\nI was there when this new blockchain technology was supposed to improve the world by enhancing everything it touched. It was supposed to make money more effective and better to use and have a way to pay SWs without getting blocked by payment providers or have ownership of data and use a wallet to sign in to services instead of the data harvesting social logins, or even to improve privacy and help to get something back from the MAN by making cash deposits and receiving digital currencies in return, but now that is a distant dream.</p><p>\\\nWhen the blockchain bonanza began, I found myself in Amsterdam working in the cannabis industry. I witnessed firsthand the need for privacy and the need for a currency that could somehow circumvent the all-seeing eye of the taxman, who collects a toll for the privilege of doing business on the ground. This led me to the rabbit hole. After jumping in with a concrete purpose, a few years later, rampant decadence and depravity replaced the vision.</p><p>These two words can make or break a project. With the prevalence of the easy turnover that memecoins, assets based on everything from viral characters to animals (strangely, mostly dogs), political figures, and everything in between, the notion of fundamentals and the basis of a utility in a network has taken the back seat, leaving many projects with legitimate uses and benefits of <a href=\"https://online.wharton.upenn.edu/blog/what-is-the-network-effect/#:~:text=The%20network%20effect%20is%20a,back%20to%20the%20internet%20itself.\">network effects</a> built in becoming all but forgotten in a landscape that has achieved mass adoption at the sake of </p><p>\\\nIn this short piece, we will cover the example of the SORA network, a misunderstood outlier within Polkadot, an even more misunderstood ecosystem. We will also cover where the crypto space came from what it was trying to achieve, then what it has become. Finally, we will wrap it all up with some food for thought: Is every non-performing asset a scam, or are you just a degenerate eager for easy money? How does this impact the crypto space as a whole?</p><p>\\\nIt is doubtful that when Satoshi wrote the <a href=\"https://bitcoin.org/bitcoin.pdf\">Bitcoin whitepaper</a>, they intended to make it an asset that would eventually be traded as an exchange-traded fund, let alone become such a massively speculated asset. Suppose the main goal was a peer-to-peer electronic cash system™. In that case, it seems the current meta has gone full circle beyond the initial objectives and become what it had set out to replace, further exacerbated by Ethereum and the “” that brought us to this point.</p><p>With the technology to make finance available to everyone and a lovely group of overnight millionaires who had money to spend, the first wave brought about decentralised lending, perpetual, and other financial instruments that were out of the hands of the masses and reserved for bankers and speculators; this floodgate allowed people to fill their respective bags and reap the benefits of a nascent technology.</p><blockquote><p>The term “tokenomics” was coined, making it so that the tokens are bound to these rules that define how many exist, what their allocations are and how they would be made available.</p></blockquote><p>\\\nThe term “tokenomics” was coined, making it so that the tokens are bound to these rules that define how many exist, what their allocations are (how many the team keeps, investors, for development runway, marketing, etc.) and how they would be made available (vesting, etc.). People study these aspects and, combined with their fundamentals (raison d’etre), decide whether to buy this token. If the token is new, it is allocated into a presale, which is then put on an exchange, and this will define the base value. The token can be subject to market forces, so put equally with the funds raised as the liquidity pair.</p><p>:::info\n<strong><em>The proportion of the pair will define the price in this scenario, so if paired with ETH, ETH&gt;TOKEN, it will be more expensive, and ETH</em></strong></p><em><p>\\\nThis, combined with a capped supply, would define a token's value. This was also the time when founders would pull the rug from under eager investors' feet (), which led to mechanisms like vesting presale tokens and other means to avoid these unfortunate circumstances; just like the third wave,&nbsp;<em>you had to be there to see it, Billy. It was glorious, and when that wave crashed and receded, we were left with something interesting and very low-res</em>.</p><h3>The Second Wave, JPEG Attacks</h3><p>Blockchain brought about one of the most controversial eras of intellectual property, which even extended to <a href=\"https://www.theecoexperts.co.uk/news/environmental-impact-of-nfts#:~:text=Yes.,a%20physical%20piece%20of%20art.\">the carbon footprint of blockchains</a>, in the purest demonstration of the arbitrary nature of ownership, computer-generated, highly pixelated images of characters ranging from women, apes, and <a href=\"https://rarible.com/token/0xd62c83ed5524802a6e5e7ca2b350e404a6a204a0:46\">flat eric</a> overtook fine arts in value and sales. Michaelangelo was rolling in his grave as punks with four-digit identifiers raked in the six digits, and more “visionaries” filled orders in Lamborghini dealerships.</p><p>\\\nThis era was almost as decadent as the first, but the bubble burst, and all the would-be wealthy had (digital) wallets full of worthless pixels. It is a good point in the story to mention that so far, digital gold, Bitcoin and its silver counterpart, Ethereum, were the key players in the game; there was a third gearing up to take centre stage (for the right reasons), but up until now was known for a series of <a href=\"https://cryptonary.com/solana-network-went-down-again-mainnet-beta-restarts-after-7-hours-of-outage/\">fundamental face plants in the form of their blockchain stopping.</a> (<em>If you are not acquainted with the blockchain space, one of the main characteristics is that the blockchain must be unstoppable, so if this unfortunate situation were to happen to you, the chain would be the butt of the joke</em>). That didn’t stop the little blockchain that could, so it stood up, brushed off the dust and decided to do something about it.</p><h3>The Meme Coin Era, Anyone Can Make a Token.</h3><p>After Solana addressed the issues that made it (in)famous, the focus on speed and ease of use brought about the latest and most impactful wave of them all, the advent of the meme coin. Indeed, “” meme coins were already around, but once making a token became as easy as naming it and setting a maximum supply, the third wave has been washing away any traces of “” that cryptocurrencies could have brought to the table. To add insult to injury, the resulting flying carpets were unstoppable in nature, none of that vested token release to save you from early liquidity pull-outs, <em>you were on your own, bubba</em>.</p><blockquote><p>The internet is rife with examples of how the blockchain space has gone from being the technology that promised to bring back privacy and foster ownership to dealing with gambling chips on an immutable ledger.</p></blockquote><p>Read any headline in the several publications dedicated to covering the industry. You’ll find the mention of a meme, a Solana meme, in a few of them every day at the risk of being the old man shouting at the cloud (or chain), the idealistic utilities that blockchains in the first wave brought continue to be washed away by the meme wave. To everyone’s surprise, Solana is one of the top-valued chains, which a blockchain scholar would have scoffed at had you told them this is the outcome.</p><p>\\\nBut what happened to these projects that had a cause? Naturally, unless the reason is fast and furious profit, they have been left on the sidelines, still going through a strong community that believes in the difference the technology makes. Indeed, <em>this was always about the technology, right</em>? Several solutions around the developed world already take care of instant payments, so the average developed-world user would not see the need for such a solution.</p><p>\\\nYour average crypto degen is somehow against the widespread benefits, <em>citing things like CBDC as a way for the government to have full access to your finances (which, unless you use cash for all your purchases, is already the case)</em> or as a way to implement a social credit that would freeze your access to money if the government deemed you a risk (which has been forbidden from the get-go by the BIS), so we are left with little other uses for a financial technology like this.</p><p>Of course, this is not the case, as proven by the blockchain of blockchains, now pivoting toward an internet computer (), where all of these chains, sharing a common base infrastructure, can focus on their specific applications, things like <a href=\"https://app.polimec.org/\">Polimec</a> to provide VC for projects, <a href=\"https://encointer.org/\">Encointer</a> as proof of personhood protocol that doesn’t steal your retinas, <a href=\"https://neuroweb.ai/\">NeuroWeb</a> hosts decentralised knowledge, <a href=\"https://www.subsocial.network/\">Subsocial</a> is the precursor of an on-chain social media, and <a href=\"https://parachains.info/\">many other projects</a> that have utility at their core.</p><p>\\\nYou also find decentralised finance in all its shades, metaverses, the Internet of Things, and network infrastructure like bridges and identity hosts. All of these utilities are available in the ecosystem, which attracts more headlines because of its sponsorship of racecar drivers or football teams than the innovations it provides. Within this ecosystem, there is an outlier that best exemplifies the case it points to: a decentralised central bank…</p><h3>The Supranational Output Rationalisation Alliance</h3><p>After WWII, Japan was suffering the aftermath of atomic destruction and the economic toll of war. The people, who have always stood out for their resilience and dedication toward their craft did not stand still and wait for handouts from the winning side, instead, they did what they knew how to do best, work, create and innovate. Thanks to support from the Central Bank, which focused on providing funds for productive output, the Japanese Economic miracle came about (<a href=\"https://youtu.be/p5Ac7ap_MAY?si=9vONyH6RLMF3UppH\">you can watch the fleshed-out explanation here</a>).</p><p>\\\nBack to the Alliance, this token has an elastic supply, which increases through governance and decreases through network effects (<em>more usage means more tokens burnt and eventually less supply</em>), similar to a currency and  a gambling chip token. It is not bound to the retail supply and demand rules, so it is misunderstood and labelled a scam. This leads to less token use, more supply required, and a vicious cycle where the high level of difficulty has left the highly fundamental project on the sidelines while the simple meme is making headlines for the sake of existing.</p><p>What can we take from the combination of the waves and the examples of projects with fundamentals? <em>Was this all a long rant by someone with no trading experience and is sour at the market?</em> I won't blame you for thinking this is the objective, as it certainly comes across this way to the sceptic. Please take a moment to consider that cryptocurrency's critical mass mainstream adoption utility was for it to replace or at least complement fiat currency; looking at the current application of the highest-valued cryptos, this is a far cry. The primary use case is to sell and eventually dump for fiat. The state of the world, meanwhile, also requires fast outputs of money, higher inflation leading to higher costs and lower salaries, conflicts that alter the prices of market essentials and outbreaks of disease that lead to supply cuts are all part of a more significant problem that is reflected in the current state of crypto as an easy way out from a problem that a salary cannot solve.</p><p>\\\nMeanwhile, developing countries are making strides, <a href=\"https://bakong.nbc.gov.kh/en/\">Cambodia has a CBDC</a> and <a href=\"https://soramitsu.co.jp/bpng-poc\">some island in the Pacific with a funny name is doing feasibility testing to implement digital currencies</a>. The supply and demand of generic tokens do not satisfy the needs that blockchain technology sets out to solve because the obstacles are too high. Still, they also demand input and action from those who use them. Decentralisation demands participation in governance and demands skin in the game to make markets; financial inclusion requires a knowledge curve to use a wallet and remember a mnemonic, which can be easily substituted by a custodial account, which offers the same assets and can be easily accessed in case passwords are forgotten. Still, when something happens, there is no recovering what was lost.</p><blockquote><p>The automatic assumption that any token that does not pump is a scam or a rugpull comes across as a degenerate response, akin to a tweaker once the high subsides.</p></blockquote><p>\\\nThe visionary innovations that have been relegated to the bottom of the ladder are not unique cases; when the user does not go beyond the basic rules of supply and demand nor seeks greater accountability from the world around them, it is easy to project these sentiments to projects that you don’t see moving the needle. The automatic assumption that any token that does not pump is a scam or a rug pull comes across as a degenerate response, akin to a tweaker once the high subsides, the anxious itch and desperate twitch that the void of endorphins has left was once the desire for likes, or the thirst for follows, but when it boils down to it, <em>you are the problem, anon</em>.</p><p>:::warning\n<strong><em>Disclosure: The author holds some tokens, but not nearly enough to cloud the judgement of this piece. This is not investment advice</em></strong>; <strong><em>it is food for thought if you made it far enough down the article to find some semblance of insight. The author is writing from personal experience, therefore if you have opposing views to those presented in this piece, complement the conversation, no one cares about you being more right. Finally, if you have decided to venture into crypto, only put in as much as you are willing to lose. Research the projects you find interesting, and do not ever under any circumstances give anyone your private keys or personal information. Pay attention.</em></strong></p></em>","contentLength":13494,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Your Next Content Breakthrough Isn’t on Google—It’s Buried in Your Last 10 Customer Calls","url":"https://hackernoon.com/your-next-content-breakthrough-isnt-on-googleits-buried-in-your-last-10-customer-calls?source=rss","date":1742551220,"author":"Arya Sharan","guid":653,"unread":true,"content":"<p>One customer put it simply: <strong>“[The software] auto-reads all notes, spec details, and summaries even ones buried on the 100th page of the plan sets so I don’t have to sift through all the sheets. Then, it factors all that info in and does the takeoffs for you. It makes our job very easy.”</strong></p><p>\\\nThat one line? That’s your content strategy.</p><p>\\\nThese are the moments you can’t script. But you can catch them - if you’re paying attention.</p><h3><strong>The Goldmine You're Probably Ignoring</strong></h3><p>\\\nNot just case study interviews. Not just customer success check-ins.</p><p>\\\nEvery single touchpoint, including demo calls, review sessions, onboarding discussions, and feedback chats, holds insights that most product marketers barely scratch the surface of.</p><p>\\\nYou might think you're listening. You probably are. But are you  using what you're hearing?</p><h3>Why Secondary Research Isn’t Enough</h3><p>We’ve all done it: pulled together content strategies based on keyword research, market reports, and the latest LinkedIn chatter. It’s fine. But it’s also kind of… safe.</p><p>\\\nMeanwhile, your prospects and customers are already telling you:</p><ul><li>What problems keep them up at night.</li><li>What workarounds they’re sick of using.</li><li>What they love about your product that you didn’t even think was a selling point.</li></ul><p>\\\nThis isn’t abstract research. This is real, raw insight. It’s coming straight from the field. And in vertical SaaS industries - where workflows are dense, decisions are practical, and adoption is hard-won, you can’t afford to ignore it.</p><h3>Creating Content in “Boring” Industries Is a Different Game</h3><p>If you’re marketing to builders, estimators, landscapers, or operators in facility management, you’re not writing for a crowd that gets hyped about the latest SaaS trends.</p><ul><li>Their workdays are packed.</li><li>Their workflows are manual, layered, and non-negotiable.</li><li>They don’t want to be “inspired.” They want to be helped.</li></ul><p>\\\nAnd that’s where content creation becomes tricky.</p><p>\\\nYou’re not just selling automation. You’re selling  &amp; time. That your software will actually work in their real-world, high-stakes environment gives them back hours. And the only way to earn that trust is to speak in their language, to their problems, with examples that reflect their day-to-day reality.</p><h3>So, Where Do You Get That Kind of Content?</h3><p>\\\nLet’s consider another quote:</p><blockquote><p><em>“If a person can send an email, they can use your software—it’s that easy”</em></p></blockquote><p>\\\nThat’s a story itself. That’s your next:</p><ul><li>Customer testimonial headline</li></ul><p>\\\nThese insights  your content strategy. You just need a system to capture and repurpose them.</p><p>At our company, every customer and prospect call is recorded via TLDV. The summary gets posted in a shared Slack channel.</p><p>\\\nEvery week, I pick 15–20 of these summaries, drop them into ChatGPT, and ask a simple question:</p><p>\\\n&nbsp;“What’s going on here?”</p><p>\\\nThe results? Super helpful.</p><p>\\\nChatGPT surfaces patterns I might have missed, like:</p><ul><li><p>This contractor has 3 estimators but is struggling with backlog.</p></li><li><p>That one needs custom exports for their ERP system.</p></li><li><p>Another is using the tool only for earthwork but not concrete, because their sales team isn’t trained yet</p></li></ul><p>You don’t get these insights from a Google search or a competitor teardown. You get them from conversations. With people. That no secondary research can replace.</p><h3>Quick Comparison: Traditional Content vs. Call-Driven Content</h3><p>|  |  |\n|----|----|\n| Keyword-first | Problem-first |\n| Based on market assumptions | Based on real conversations |\n| Generic value props | Specific customer quotes |\n| Theoretical best practices | Concrete outcomes and results |</p><p>Which one do you think will convert better?</p><h3>What Happens When You Don’t Use This?</h3><ul><li>Your messaging feels off.</li><li>Your content doesn’t resonate.</li><li>Your content is just words on a doc and not helpful, actionable information that your reader can make use of</li><li>You waste time creating content nobody engages with.</li></ul><p>\\\nIt’s not about producing  content. It’s about creating , sharper, more relevant content.</p><p>Next time you're on a call or reviewing a summary, try this quick checklist:</p><ul><li><p>What problem did they lead with?</p></li><li><p>What workarounds are they currently using?</p></li><li><p>What metric or process improved after using your product?</p></li><li><p>What words did they use to describe the change?</p></li></ul><p>\\\nThat’s your next blog. Or your next LinkedIn carousel. Or your next sales battle card.</p><p>We’re in a world overflowing with content. Most of it sounds the same.</p><p>\\\nThe best way to stand out isn’t to shout louder. It’s to speak more clearly - to your  audience, using their own words, about their own problems.</p><p>\\\nYour call summaries are not just internal artifacts. They are your most underutilized source of truth.</p><p>\\\nSo start using them. Because the best content engine? It’s not your CMS. It’s your calls.</p>","contentLength":4748,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Swift init(), Once and for All","url":"https://hackernoon.com/swift-init-once-and-for-all?source=rss","date":1742551205,"author":"Kiryl Famin","guid":652,"unread":true,"content":"<p>Hello! My name is Kiryl Famin, and I am an iOS developer.</p><p>\\\nToday, I want to thoroughly examine such a simple topic as initializers in Swift. Despite its apparent simplicity, sometimes the lack of a &nbsp;understanding of this topic leads to frustrating errors that one wants to fix quickly without delving into the details.</p><p>\\\nIn this article, we will cover everything related to initializers, including:</p><ul><li><p>How to retain structure’s memberwise initializer while defining a custom one</p></li><li><p>Why it is not always necessary to write an initializer in classes</p></li><li><p>Why calling&nbsp;&nbsp;is not always required in a designated initializer</p></li><li><p>Why all fields of a subclass must be populated before calling&nbsp;</p></li><li><p>How to access all parent initializers with minimal overrides in subclasses</p></li><li><p>When exactly a&nbsp;&nbsp;initializer is needed</p></li><li><p>Why&nbsp;&nbsp;is always called without parameters, but&nbsp;&nbsp;and&nbsp;&nbsp;are overridden</p></li></ul><p>…and more. But let’s take it step by step.</p><ul><li>Retaining a memberwise initializer</li></ul><ul><li>Retaining superclass' convenience initializer</li><li>Minimizing the number of overrides</li><li>&nbsp;initializer: generics, protocols,&nbsp;,&nbsp;</li><li>&nbsp;without parameters</li></ul><blockquote><p>&nbsp;is the process of preparing an instance of a class, structure, or enumeration for use. This process involves setting an initial value for each stored property on that instance and performing any other setup or initialization that’s required before the new instance is ready for use.</p><p>\\\n  You implement this initialization process by defining&nbsp;, which are like special methods that can be called to create a new instance of a particular type. Unlike Objective-C initializers, Swift initializers don’t return a value. Their primary role is to ensure that new instances of a type are correctly initialized before they’re used for the first time.</p></blockquote><p>\\\nWell, i guess i don’t have to add anything here.</p><p>Let’s start by discussing structure initializers. This is quite simple since there is no inheritance, but there are still some rules you must know about.</p><p>Let’s write a simple structure:</p><pre><code>struct BankAccount {\n\n        let amount: Double\n        let isBlocked: Bool\n}\n\nlet bankAccount = BankAccount(amount: 735, isBlocked: Bool)\n</code></pre><p>\\\nNotice that we were able to initialize the structure without explicitly declaring an initializer. This happens because structures receive a&nbsp;&nbsp;generated by the compiler. This works&nbsp;.</p><p>\\\nBy selecting&nbsp;<em>Refactor → Generate memberwise initializer</em>, you can see how it looks:</p><pre><code>init(amount: Double, isBlocked: Bool) {\n    self.amount = amount\n    self.isBlocked = isBlocked\n}\n</code></pre><p>\\\nFrom the signature, it’s easy to see that failing to provide values for all parameters will result in a compilation error:</p><pre><code>let bankAccount = BankAccount(amount: 735) // ❌ Missing argument for parameter 'isBlocked' in call\n</code></pre><p>\\\nHowever, if you want to reduce the number of required arguments, you can define a custom initializer:</p><pre><code>init(amount: Double, isBlocked: Bool = false) {\n        self.amount = amount\n        isBlocked = isBlocked\n}\n\nlet bankAccount = BankAccount(amount: 735) // ✅\n</code></pre><p>\\\nNote that if&nbsp;&nbsp;is not populated, this will result in a compilation error because&nbsp;<strong>all structure properties must be populated in an initializer</strong>.</p><p>The only case where a field does not need to be populated  is when it is an&nbsp;&nbsp;()&nbsp;&nbsp;(). In such cases, the field will default to&nbsp;:</p><pre><code>struct BankAccount {\n\n    let amount: Double\n    var isBlocked: Bool?\n\n    init(amount: Double) {\n        self.amount = amount\n    }\n}\n\nlet bankAccount = BankAccount(amount: 735) // ✅\n</code></pre><p>\\\nHowever, if we try to use the memberwise initializer in this case, we will get a compilation error:</p><pre><code>let bankAccount = BankAccount(\n        amount: 735,\n        isBlocked: false\n) // ❌ Extra argument 'isBlocked' in call\n</code></pre><h3>Retaining a memberwise initializer</h3><p>This happens because declaring a custom initializer removes the memberwise initializer. It is still possible to define it explicitly, but it will not be available automatically.</p><p>\\\nHowever, there is a small trick to retain the memberwise initializer: declare the custom initializer in an&nbsp;.</p><pre><code>struct BankAccount {\n\n    let amount: Double\n    var isBlocked: Bool?\n}\n\nextension BankAccount {\n\n        init(amount: Double) {\n                self.amount = amount\n      }\n}\n\nlet barclaysBankAccount = BankAccount(amount: 735) // ✅\nlet revolutBankAccount = BankAccount(amount: 812, isBlocked: false) // ✅\n\nprint(barclaysBankAccount.isBlocked) // nil\nprint(barclaysBankAccount.isBlocked) // false\n</code></pre><ul><li>==All fields must be populated&nbsp;in an initializer==</li><li>==Optional==&nbsp;&nbsp;==fields default to==&nbsp;</li><li>==Structures receive a free memberwise initializer==</li><li>==The memberwise initializer disappears if a custom initializer is declared==</li><li>==To retain structure’s memberwise initializer, define a custom one in an== </li></ul><p>The primary initializer for a class is the&nbsp;. It serves two purposes:</p><ol><li>Ensures that all fields are populated</li><li>If the class is inherited, it calls the superclass initializer</li></ol><pre><code>class Animal {\n\n    var name: String\n\n    init(name: String) {\n        self.name = name\n    }\n}\n\nclass Dog: Animal {\n\n    var breed: String\n    var name: String\n\n    init(breed: String, name: String) {\n        self.breed = breed\n\n        super.init(name: name)\n    }\n}\n</code></pre><p>\\\nAll fields&nbsp;&nbsp;calling&nbsp;. This is because the superclass initializer may call methods overridden by the subclass, which could access unpopulated subclass properties.</p><pre><code>class Animal {\n\n    var age: Int\n\n    init(age: Int) {\n        self.age = age\n\n        getInfo()\n    }\n\n    func getInfo() {\n            print(\"Age: \", age)\n    }\n}\n\nclass Dog: Animal {\n\n    var breed: String\n\n    init(breed: String, age: Int) {\n        self.breed = breed // imagine we haven't done this\n\n        super.init(age: age)\n    }\n\n    override func getInfo() {\n            print(\"Age: \", age, \", breed: \", breed)\n    }\n}\n</code></pre><p>\\\nThus, if we had not set&nbsp;, we would have encountered a runtime error because the&nbsp;&nbsp;initializer would have called the overridden&nbsp;&nbsp;method from the&nbsp;&nbsp;class. This method attempts to access the&nbsp;property, which would not yet be populated.</p><p>\\\nUnlike structures, classes do not receive an implicit memberwise initializer. If there are uninitialized properties, a compilation error occurs:</p><pre><code>class Animal { // ❌ Class 'Animal' has no initializers\n\n    var age: Int\n}\n</code></pre><pre><code>class Animal { // ✅\n\n    var age: Int = 0\n}\n</code></pre><pre><code>class Animal { // ✅\n\n    var age: Int?\n}\n</code></pre><p>Classes can also have a&nbsp;. Unlike designated initializers, they do not create an object from scratch but simplify the initialization process by reusing the logic of other initializers.</p><pre><code>class Rectangle {\n\n    var width: Double\n    var height: Double\n\n    init(width: Double, height: Double) {\n        self.width = width\n        self.height = height\n    }\n\n    convenience init(side: Double) {\n        self.init(width: side, height: side) // uses a designated initializer of self\n    }\n}\n</code></pre><p>\\\nConvenience initializers can call either designated initializers or other convenience initializers. Ultimately, a designated initializer will always be called.</p><p>\\\n==Convenience initializers always go horizontal (self.init), and designated initializers go vertical (super.init).==</p><h3><strong>Retaining Superclass’ Convenience Initializer</strong></h3><p>As soon as a subclass declares new properties, it loses access to all of the superclass’s convenience initializers.</p><pre><code>class Animal {\n\n    var age: Int\n    var name: String\n\n    init(age: Int, name: String) {\n        self.age = age\n        self.name = name\n    }\n\n    convenience init(age: Int) {\n        self.init(age: age, name: \"Default\")\n    }\n\n    convenience init(name: String) {\n        self.init(age: 0, name: name)\n    }\n}\n\nclass Dog: Animal {\n\n    var breed: String\n\n    init(age: Int, name: String, breed: String) {\n        self.breed = breed\n\n        super.init(age: age, name: name)\n    }\n}\n\nlet dog = Dog(age: 3) // ❌ Missing arguments for parameters 'breed', 'name' in call\n</code></pre><p>\\\nThis can be fixed by overriding <strong>all of the superclass’s designated initializers</strong>.</p><pre><code>class Dog: Animal {\n\n    // ...\n\n    override init(age: Int, name: String) {\n        self.breed = \"Mixed\"\n\n        super.init(age: age, name: name)\n    }\n}\n\nlet dog = Dog(age: 3) // ✅\n</code></pre><p>\\\nIt is easy to see that, in this way, to use a convenience initializer in the next subclass, you need to override&nbsp;&nbsp;initializers.</p><pre><code>class GuideDog: Dog {\n\n    var isTrained: Bool\n\n    override init(age: Int, name: String) {\n        self.isTrained = false\n\n        super.init(age: age, name: name)\n    }\n\n    override init(age: Int, name: String, breed: String) {\n        self.isTrained = false\n\n        super.init(age: age, name: name, breed: breed)\n    }\n\n    init(age: Int, name: String, breed: String, isTrained: Bool) {\n        self.isTrained = isTrained\n\n        super.init(age: age, name: name, breed: breed)\n    }\n}\n\nlet dog = GuideDog(age: 3) // ✅\n</code></pre><h3><strong>Minimizing the number of overrides</strong></h3><p>However, this can be avoided by using a&nbsp;<strong>convenience override initializer</strong>.</p><pre><code>class Dog: Animal {\n\n    var breed: String\n\n    convenience override init(age: Int, name: String) {\n        self.init(age: age, name: name, breed: \"Mixed\") // self, not super\n    }\n\n    init(age: Int, name: String, breed: String) {\n        self.breed = breed\n\n        super.init(age: age, name: name)\n    }\n}\n\nclass GuideDog: Dog {\n\n    var isTrained: Bool\n\n    //  override init(age: Int, name: String) {\n    //      self.isTrained = false\n    //      \n    //      super.init(age: age, name: name, breed: \"Mixed\")\n    //  }\n\n    convenience override init(age: Int, name: String, breed: String) {\n        self.init(age: age, name: name, breed: breed, isTrained: false) // self, not super\n    }\n\n    init(age: Int, name: String, breed: String, isTrained: Bool) {\n        self.isTrained = isTrained\n\n        super.init(age: age, name: name, breed: breed)\n    }\n}\n\nlet dog = GuideDog(age: 3) // ✅\n</code></pre><p>\\\nNow we have only 2 explicitly specified initializers in each subclass.</p><p>:::tip\n<em>Notice how convenience override initializers call</em>&nbsp;designated init instead of&nbsp;.</p><p>This trick is thoroughly explained in Chapter 5 of&nbsp;<a href=\"https://www.manning.com/books/swift-in-depth\">Swift in Depth</a>&nbsp;by Tjeerd in 't Veen, a book I highly recommend.</p><ul><li>A&nbsp;&nbsp;ensures that all properties are populated and calls&nbsp;.</li><li>A&nbsp;&nbsp;simplifies initialization by calling a designated initializer.</li><li>A&nbsp;&nbsp;becomes unavailable to subclasses if they declare new properties.</li><li>To restore a superclass’s&nbsp;, all of its designated initializers must be overridden.</li><li>To minimize the number of overrides, a&nbsp;<strong>convenience override initializer</strong>&nbsp;can be used.</li></ul><p>We have already discussed that if a subclass does not introduce new parameters, it automatically inherits all of the superclass’s initializers.</p><pre><code>class Base {\n\n    let value: Int\n\n    init() {\n        value = 0\n    }\n\n    init(value: Int) {\n        self.value = value\n    }\n}\n\nclass Subclass: Base { }\n\nlet subclass = Subclass() // ✅\nlet subclass = Subclass(value: 3) // ✅\n</code></pre><p>\\\nHowever, there is another important point: if the superclass has only one designated initializer and it is parameterless (&nbsp;without arguments), then explicitly declared initializers in the subclass&nbsp;&nbsp;to call&nbsp;. In this case, the Swift compiler&nbsp;&nbsp;the call to the available&nbsp;&nbsp;without arguments.</p><pre><code>class Base {\n\n    init() { }\n}\n\nclass Subclass: Base {\n\n    let secondValue: Int\n\n    init(secondValue: Int) {\n        self.secondValue = secondValue // ✅ without explicit super.init()\n    }\n}\n</code></pre><p>\\\nThe code compiles because&nbsp;&nbsp;is implicitly called. This is crucial for some of the following examples.</p><p>A&nbsp;&nbsp;initializer is used in all cases where a subclass must have the same initializer as the base class. It must also call&nbsp;. Below are examples where a&nbsp;&nbsp;initializer is necessary.</p><p>Calling&nbsp;&nbsp;on a generic type is only possible by declaring it as a&nbsp;.</p><pre><code>class Base { }\n\nclass Subclass: Base { }\n\nstruct Factory&lt;T: Base&gt; {\n\n    func initInstance() -&gt; T { // ❌ Constructing an object of class\n        T()                    // type 'T' with a metatype value\n    }                          // must use a 'required' initializer\n}\n</code></pre><p>\\\nThis code does not compile because&nbsp;&nbsp;does not know anything about the subclasses of&nbsp;. Although in this particular case,&nbsp;&nbsp;does have an&nbsp;&nbsp;without parameters, imagine if it introduced a new field:</p><pre><code>class Subclass: Base {\n\n    let value: Int\n\n    init(value: Int) {\n        self.value = value\n    }\n}\n</code></pre><p>\\\nHere, it no longer has an empty&nbsp;, so it must be declared as&nbsp;.</p><pre><code>class Base {\n\n    required init() { }\n}\n\nclass Subclass: Base { }\n\nstruct Factory&lt;T: Base&gt; {\n\n    static func initInstance() -&gt; T { // ✅\n        T()\n    }\n}\n\nlet subclass = Factory&lt;Subclass&gt;.initInstance()\n</code></pre><p>\\\nNotice that even though we did not explicitly declare&nbsp;&nbsp;in&nbsp;, the compiler generated it for us. This was discussed in . The&nbsp;&nbsp;was automatically inherited and called&nbsp;.</p><pre><code>class Subclass: Base {\n\n        required init() {\n                super.init()\n        }\n}\n</code></pre><p>All initializers declared in protocols must be&nbsp;:</p><pre><code>protocol Initable {\n\n    init()\n}\n\nclass InitableObject: Initable {\n\n    init() { // ❌ Initializer requirement 'init()' can only \n             // be satisfied by a 'required' initializer \n    }        // in non-final class 'InitableObject'\n}\n</code></pre><p>\\\nAgain, this is necessary so that the compiler ensures that the subclass implements the protocol initializer. As we already know, this does not always happen—if&nbsp;&nbsp;is not&nbsp;, the subclass is not obligated to override it and may define its own initializer.</p><pre><code>class IntValue: InitableObject {\n\n    let value: Int\n\n    init(value: Int) {\n        self.value = value\n    }\n}\n\nlet InitableType: Initable.Type = IntValue.self\nlet initable: Initable = InitableType.init()\n</code></pre><p>\\\nOf course, the following code will not compile because&nbsp;&nbsp;is not&nbsp;.</p><pre><code>class InitableObject: Initable {\n\n    required init() { } // ✅\n}\n\nclass IntValue: InitableObject {\n\n    let value: Int\n\n    required init() {\n            self.value = 0\n    }\n\n    init(value: Int) {\n        self.value = value\n    }\n}\n</code></pre><p>A similar situation occurs when calling the&nbsp;&nbsp;initializer in static methods.</p><pre><code>class Base {\n\n    let value: Int\n\n    init(value: Int) {\n        self.value = value\n    }\n\n    static func instantiate() -&gt; Self {\n        Self(value: 3) // ❌ Constructing an object of class type 'Self' \n    }                  // with a metatype value must use a 'required' initializer\n}\n</code></pre><p>\\\nAs always, the issue lies in inheritance:</p><pre><code>class Subclass: BaseClass {\n\n    let anotherValue: Int\n\n    init(anotherValue: Int) {\n        self.anotherValue = anotherValue\n    }\n}\n\nlet subclass = Subclass.instantiate() // ❌\n</code></pre><pre><code>class BaseClass {\n\n    let value: Int\n\n    required init(value: Int) { // ✅\n        self.value = value\n    }\n\n    static func instantiate() -&gt; Self {\n        Self(value: 3)\n    }\n}\n</code></pre><h3>Getting rid of : </h3><p>Since the purpose of&nbsp;&nbsp;is to enforce the implementation of an initializer in subclasses, naturally, prohibiting inheritance using the&nbsp;&nbsp;keyword removes the need to mark an initializer as&nbsp;.</p><pre><code>protocol Initable {\n\n    init()\n}\n\nfinal class InitableObject: Initable { } // ✅\n</code></pre><pre><code>protocol ValueInitable {\n\n    init(value: Int)\n}\n\nfinal class ValueInitableObject: ValueInitable {\n\n    init(value: Int) { } // ✅\n}\n</code></pre><ul><li>If a subclass does not introduce new parameters, it automatically inherits all initializers from its superclass.</li><li>If the superclass only has&nbsp;&nbsp;without parameters, it is called automatically in subclass initializers.</li><li>A&nbsp;&nbsp;initializer is needed to guarantee its presence in subclasses for use in generics, protocols, and&nbsp;.</li></ul><p>A brief mention of the&nbsp;&nbsp;initializer without parameters, which cannot be found in the documentation but is mysteriously used everywhere.</p><p>\\\nThe reason is that&nbsp;&nbsp;inherits from&nbsp;, which has an&nbsp;&nbsp;without parameters.&nbsp;, this initializer is not explicitly declared in the&nbsp;&nbsp;interface, yet it is still available:</p><pre><code>@available(iOS 2.0, *)\n@MainActor open class UIView : UIResponder, NSCoding, UIAppearance, UIAppearanceContainer, UIDynamicItem, UITraitEnvironment, UICoordinateSpace, UIFocusItem, UIFocusItemContainer, CALayerDelegate {\n\n    open class var layerClass: AnyClass { get }\n\n    public init(frame: CGRect)\n\n    public init?(coder: NSCoder)\n\n    open var isUserInteractionEnabled: Bool\n\n    // no init()\n</code></pre><p>\\\nHowever, under the hood, this initializer calls&nbsp;&nbsp;when initialized in code or&nbsp;&nbsp;when initialized via Interface Builder. This happens because&nbsp;&nbsp;provides its own implementation of&nbsp;, which can be confirmed by the fact that&nbsp;&nbsp;returns different addresses for&nbsp;&nbsp;and&nbsp;.</p><p>A failable init is just one that returns an optional</p><pre><code>final class Failable {\n\n    let positiveValue: Int\n\n    init?(value: Int) {\n        guard value &gt; 0 else { return nil }\n\n        positiveValue = value\n    }\n}\n</code></pre><p>Enums with a raw value get a free </p><pre><code>enum Direction: String {\n\n    case north\n    case west\n    case south\n    case east\n}\n\nlet north = Direction(rawValue: \"north\")\n</code></pre><p>You can also create a custom init for enums. All enum inits must assign .</p><pre><code>enum DeviceType {\n\n    case phone\n    case tablet\n\n    init(screenWidth: Int) {\n        self = screenWidth &gt; 800 ? .tablet : .phone\n    }\n}\n</code></pre><p>We have covered all the essential aspects of initializers in Swift:</p><ul><li><p>In an initializer, all fields must be populated.</p></li><li><p>Optional&nbsp;&nbsp;properties default to&nbsp;.</p></li><li><p>Structures receive a free&nbsp;.</p></li><li><p>The&nbsp;<strong>memberwise initializer disappears</strong>&nbsp;when a custom initializer is defined.</p></li><li><p>A&nbsp;&nbsp;ensures all fields are populated and calls&nbsp;.</p></li><li><p>A&nbsp;&nbsp;simplifies initialization by calling a designated initializer.</p></li><li><p>Convenience initializers always go  (), and designated initializers go  ().</p></li><li><p>A&nbsp;&nbsp;becomes unavailable to subclasses if they declare new properties.</p></li><li><p>To restore a superclass’s&nbsp;, all of its designated initializers must be overridden.</p></li><li><p>To minimize the number of overrides, a&nbsp;<strong>convenience override initializer</strong>&nbsp;can be used.</p></li><li><p>If a subclass does not introduce new parameters, it automatically inherits all initializers from its superclass.</p></li><li><p>If the superclass only has&nbsp;&nbsp;without parameters, it is automatically called in subclass initializers.</p></li><li><p>A&nbsp;&nbsp;ensures its presence in subclasses for use in generics, protocols, and&nbsp;.</p></li><li><p>&nbsp;calls either&nbsp;&nbsp;or&nbsp;.</p></li><li><p>A&nbsp;&nbsp;returns an optional.</p></li><li><p>Enums with a raw value get a free&nbsp;.</p></li><li><p>All enum initializers must assign&nbsp;.</p></li></ul><p>I hope you found something useful in this article. If anything remains unclear or you find inaccuracy, feel free to contact me for a free explanation on Telegram:&nbsp;<a href=\"http://t.me/kfamyn?ref=hackernoon.com\">@kfamyn</a>.</p>","contentLength":18074,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Preparing for a Busy Sales Season? Here's How to Not Mess Up the Customer Experience","url":"https://hackernoon.com/preparing-for-a-busy-sales-season-heres-how-to-not-mess-up-the-customer-experience?source=rss","date":1742551060,"author":"Joanna Clark Simpson","guid":651,"unread":true,"content":"<p>When it comes to predicting consumer trends, 2025 has created some interesting dynamics. Consumer trends reflect uncertainty over the economy and inflation, as well as close monitoring of spending and high expectations when money is spent.</p><p>\\\nThe pressure is on business owners, and it’s crucial to keep close tabs on consumer trends as the year progresses. From sustainability to convenience, customers want it all, and they are willing to reward companies that provide what they seek.</p><h2>Dependable Delivery Drives Customer Satisfaction</h2><p>According to a consumer trends report, one of the most common complaints about companies is delivery issues. Customers are frustrated by companies with long or inconsistent delivery schedules and woe to the company that fails to deliver an order when promised.</p><p>\\\nThe consumer issues with delivery create an opportunity for business owners willing to lean into logistics. Shift your focus from discounts and web design to delivery options. Provide customers with guaranteed delivery time frames and options, and be sure that you’re moving at the right pace with the right systems on your end to meet those guarantees.</p><h2>Customers Scrutinize Product and Service Value</h2><p>Many consumers face high prices and tight cash, which drives many consumer trends. One such trend is the increasing impact of the total customer experience. With fewer dollars to spend, the average consumer wants to be sure they are getting the best product and the best service for the money they spend.</p><p>\\\nThe experience customers have with your company matters just as much as the items or services they buy, and you can earn more if you’re providing a terrific experience. PWC found that there is a 16% price premium as well as brand loyalty awarded to companies that create a great experience.</p><p>\\\nCustomers look to wait times, agent interactions, refunds, and resolutions as the litmus test for customer experience.  will walk away from a company after just one bad experience. Be the company that builds brand loyalty by refining your refund and return practices, adding AI options to help customers with simple needs more quickly, and training your agents well to personalize customer service interactions in a way that makes customers feel seen and heard.</p><h2>Customers Are Growing Frustrated with BNPL Options</h2><p>Buy Now, Pay Later (BNPL) options are increasing in number, currently accounting for  of the global market share and being most used in the United States. However, consumer insights are also forecasting a growing distrust of BNPL services. While customers may opt to use BNPL services to spread out payments for bigger ticket purchases, they are also complaining more about hidden fees, unclear repayment terms, and delayed resolutions.</p><p>\\\nThis consumer trend reflects the care households are taking with their funds as the economy tightens and budgets respond accordingly. Families are careful with funds, often choosing to spread payments out over time, but they are also demanding transparency with these services and adequate customer support.</p><p>\\\nAs a business owner, research BNPL options for your customers. But be sure to find companies that meet customers’ needs. Partnering with a BNPL service that frustrates customers instead of helping them can easily tarnish your business simply by proximity.</p><p>Consumer insights and online reviews tell us that customer feedback and customer spending go hand in hand, and this really shows up in customer complaints.</p><p>\\\nAs you prepare for bigger spending seasons like summer or the holiday season, prepare for an increase in customer frustration as well. Prepare your customer service and sales agents to be patient and understanding and to look for opportunities to personalize the sales experience. McKinsey found that  will easily switch products or brands when they don’t get what they want.</p><p>\\\nPour just a bit more into the customer experience with increased delivery logistics, training around refunds and returns, and increased hours or bandwidth around Valentine’s Day, back-to-school time, and when the summer travel season starts. Customers are ready to offer feedback in reviews and on social media – be sure they’re providing the right kind.</p><h2>Adaptability Is Always Rewarded</h2><p>2025 consumer trends tell us that customers are seeking high-quality customer experience, dependable shipping and delivery options, seamless return and refund policies, and increased transparency across the full shopping and buying experience.</p><p>\\\nIt is still relatively early in 2025, and much is shifting in the economic and political landscape. Companies that remain nimble and adaptable while providing genuine, excellent customer experiences will always remain competitive.</p>","contentLength":4714,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Vulkan 1.4.311 Released With New Extension For BFloat16","url":"https://www.phoronix.com/news/Vulkan-1.4.311-Released","date":1742550936,"author":"Michael Larabel","guid":772,"unread":true,"content":"<article>The Vulkan 1.4.311 specification update is out today with a handful of issues resolved with various clarifications and other subtle refinements. Plus two new extensions...</article>","contentLength":171,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Clearview Attempted To Buy Social Security Numbers and Mugshots for its Database","url":"https://yro.slashdot.org/story/25/03/20/1925212/clearview-attempted-to-buy-social-security-numbers-and-mugshots-for-its-database?utm_source=rss1.0mainlinkanon&utm_medium=feed","date":1742542200,"author":"msmash","guid":209,"unread":true,"content":"Controversial facial recognition company Clearview AI attempted to purchase hundreds of millions of arrest records including social security numbers, mugshots, and even email addresses to incorporate into its product, 404 Media reports. From the report: For years, Clearview AI has collected billions of photos from social media websites including Facebook, LinkedIn and others and sold access to its facial recognition tool to law enforcement. The collection and sale of user-generated photos by a private surveillance company to police without that person's knowledge or consent sparked international outcry when it was first revealed by the New York Times in 2020. \n\nNew documents obtained by 404 Media reveal that Clearview AI spent nearly a million dollars in a bid to purchase \"690 million arrest records and 390 million arrest photos\" from all 50 states from an intelligence firm. The contract further describes the records as including current and former home addresses, dates of birth, arrest photos, social security and cell phone numbers, and email addresses. Clearview attempted to purchase this data from Investigative Consultant, Inc. (ICI) which billed itself as an intelligence company with access to tens of thousands of databases and the ability to create unique data streams for its clients. The contract was signed in mid-2019, at a time when Clearview AI was quietly collecting billions of photos off the internet and was relatively unknown at the time.","contentLength":1474,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Intel Updates Advanced Performance Extensions \"APX\" Code For The Linux Kernel","url":"https://www.phoronix.com/news/Intel-APX-Update-Linux-Kernel","date":1742518774,"author":"Michael Larabel","guid":771,"unread":true,"content":"<article>In addition to Intel software engineers this week being busy doing a late restructuring of AVX10 support in moving away from possible 256-bit maximum vector register size (a great move and still so excited to see this materialize!), there are also Intel engineers continuing work on enabling Advanced Performance Extensions (APX) on the Linux kernel side...</article>","contentLength":357,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"GTC felt more bullish than ever, but Nvidia’s challenges are piling up","url":"https://techcrunch.com/2025/03/20/gtc-felt-more-bullish-than-ever-but-nvidias-challenges-are-piling-up/","date":1742513049,"author":"Charles Rollet, Kyle Wiggers","guid":389,"unread":true,"content":"<article>Nvidia took San Jose by storm this year, with a record-breaking 25,000 attendees flocking to the San Jose Convention Center and surrounding downtown buildings. Many workshops, talks, and panels were so packed that people had to lean against walls or sit on the floor — and suffer the wrath of organizers shouting commands to get […]</article>","contentLength":336,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Apple faces lawsuit over Apple Intelligence delays","url":"https://techcrunch.com/2025/03/20/apple-faces-lawsuit-over-apple-intelligence-delays/","date":1742509192,"author":"Kyle Wiggers","guid":388,"unread":true,"content":"<article>Apple has been sued in federal court over what plaintiffs allege is false advertising of several Apple Intelligence features. Filed Wednesday in U.S. District Court in San Jose, the suit seeks class-action status and damages on behalf of those who purchased Apple Intelligence-capable iPhones and other devices. Plaintiffs claim that device owners haven’t received the […]</article>","contentLength":376,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"InZoi Early Access Review - Pretty Vacant","url":"https://www.gamespot.com/reviews/inzoi-early-access-review-pretty-vacant/1900-6418345/?ftag=CAD-01-10abi2f","date":1742505720,"author":"Jessica Cogswell","guid":735,"unread":true,"content":"<p>Reviewing InZoi without mentioning The Sims, which is easily its most direct influence, comparison, and competitor is, quite simply, a fool's errand. There was a part of me--a very naive part, mind you--that thought it might be a bit fun to see how long I could go without making mention of the game in this review as a sort of challenge for myself. Clearly, I have already failed.</p><p dir=\"ltr\">However, the context in which InZoi exists matters. Whereas the world is filled with cozy games, life sims, and plenty of other titles that reside somewhere between the two, extremely few play quite like The Sims. It goes without saying that Maxis created something extremely special back in 2000--something so creative, charming, innovative, and intricately designed that seemingly no other game studio has even attempted to put an end to its quarter-century long reign over the life-sim genre. There is no denying that the franchise's reputation has taken some hits over the years, primarily due to its perceived stagnation and parent company EA's predatory monetization tactics. As this discontent has grown, so too has the number of people looking for a viable competitor. And now, thanks to InZoi, we have a fresh-faced and utterly gorgeous new challenger.</p><p dir=\"ltr\">Considering its good looks were among the first of many things that made InZoi such a highly anticipated title, I'll start by saying that it is just as mind-blowing to look at as it seems. From its UI to its city streets to its pouty-lipped, pop star-esque characters, everything about InZoi is visually remarkable. Vast amounts of customization options, an immersive and ever-changing open world, and an intense focus on making things feel true-to-life yet just more grand further polish this gem. And I was relieved that, despite all its luster, the game ran perfectly fine on my less-than-great gaming PC (AMD Ryzen 5 3600/NVIDIA GeForce GTX 1660 Super). And yet, I was ultimately forced to reckon with the fact that, in my 20 or so hours with InZoi, I missed out on something incredibly important: having fun. Though InZoi is impressive, immersive, and brimming with potential, in its current state there is a sterility and lifelessness that is hard to move past. This paired with stale gameplay ultimately made InZoi a game I desperately to enjoy, but seldom did.</p><a href=\"https://www.gamespot.com/reviews/inzoi-early-access-review-pretty-vacant/1900-6418345/?ftag=CAD-01-10abi2f/\">Continue Reading at GameSpot</a>","contentLength":2338,"flags":null,"enclosureUrl":"https://www.gamespot.com/a/uploads/screen_medium/1639/16394322/4462597-ce843498-3592-4518-8720-c3143e1595cd.jpg","enclosureMime":"","commentsUrl":null},{"title":"The Most Interesting Linux 6.14 Features From NTSYNC To AMD Ryzen AI & Rust Abstractions","url":"https://www.phoronix.com/news/Linux-6.14-Features-Reminder","date":1742502490,"author":"Michael Larabel","guid":770,"unread":true,"content":"<article>Barring any last minute issues or hesitation by Linus Torvalds, the Linux 6.14 kernel is aiming for releasing as stable this coming Sunday on 23 March. Here's a reminder about some of the most interesting changes to find with Linux 6.14...</article>","contentLength":239,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Mesa 25.0.2 Changes Range From Fixing Soft FP64 For Old AMD GPUs To RX 9070 Fixes","url":"https://www.phoronix.com/news/Mesa-25.0.2-Released","date":1742488205,"author":"Michael Larabel","guid":769,"unread":true,"content":"<article>Even amid the ongoing FreeDesktop.org GitLab cloud/server migration, Eric Engestrom has managed to release Mesa 25.0.2 on schedule as the newest stable release for these open-source OpenGL and Vulkan drivers for Linux systems...</article>","contentLength":228,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Mesa RADV vs. AMDVLK Vulkan Driver Performance For The AMD Radeon RX 9070 Series","url":"https://www.phoronix.com/review/radeon-rx9070-radv-amdvlk","date":1742481000,"author":"Michael Larabel","guid":768,"unread":true,"content":"<article>With my launch day testing of the Radeon RX 9070 graphics cards on Linux the Mesa RADV driver was used given that is what is predominantly used by Linux gamers/enthusiasts and is used out-of-the-box by all of the major Linux distributions. Last week AMD released an AMDVLK Vulkan driver with RDNA4 GPU support as the company's official open-source Vulkan API Linux driver. For those curious how the Mesa RADV and AMDVLK drivers are competing for the Radeon RX 9070 series, this article is for you with benchmarks of both drivers and both RX 9070 graphics cards.</article>","contentLength":561,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"105 Days With an Electromagnetic Heart","url":"https://spectrum.ieee.org/artificial-heart","date":1742479203,"author":"Greg Uyeno","guid":67,"unread":true,"content":"<p>Patient sets a record with an innovative artificial heart outside the hospital</p>","contentLength":78,"flags":null,"enclosureUrl":"https://spectrum.ieee.org/media-library/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy81ODE1OTIyNC9vcmlnaW4uanBnIiwiZXhwaXJlc19hdCI6MTc3Nzg1ODM3MX0.7ZhxBqDDdoBhPF0x6RYEJp-5sDmr1KthmZAi1FyhTQA/image.jpg?width=600","enclosureMime":"","commentsUrl":null},{"title":"Arm Bringing Up Support For Newer Mali GPUs With The Open-Source Panthor Driver","url":"https://www.phoronix.com/news/Arm-Mali-Newer-Hardware-Panthor","date":1742475649,"author":"Michael Larabel","guid":767,"unread":true,"content":"<article>Arm engineer Karunika Choo today sent out the latest patches developing a new GPU-specific initialization framework for the Panthor open-source kernel graphics driver as part of bringing up support for newer Mali GPUs...</article>","contentLength":220,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Data Centers Seek Engineers Amid a Talent Shortage","url":"https://spectrum.ieee.org/data-center-jobs","date":1742472002,"author":"Aaron Mok","guid":66,"unread":true,"content":"<p>The AI boom is driving demand for more skilled electrical engineers</p>","contentLength":67,"flags":null,"enclosureUrl":"https://spectrum.ieee.org/media-library/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpbWFnZSI6Imh0dHBzOi8vYXNzZXRzLnJibC5tcy81ODE0Nzg4OS9vcmlnaW4uanBnIiwiZXhwaXJlc19hdCI6MTc5MTU0MDk4MH0.7LI-qDSKFYznOSDLoWtKO6c0VGgev65zA6sWdU-_hF4/image.jpg?width=600","enclosureMime":"","commentsUrl":null},{"title":"Google Developing \"Live Update Orchestrator\" As New Means Of Live Linux Kernel Updates","url":"https://www.phoronix.com/news/Google-Live-Update-Orchestrator","date":1742469087,"author":"Michael Larabel","guid":766,"unread":true,"content":"<article>While there is Kpatch, Ksplice, and other live patching solutions already in use for patching a running Linux kernel for deploying security updates without downtime, Google engineers are developing the Live Update Orchestrator as a new means of transitioning to a new updated kernel with minimal downtime...</article>","contentLength":307,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"DAMON Self-Tuned Memory Tiering Shows Nice Improvement For Linux Servers","url":"https://www.phoronix.com/news/DAMON-Self-Tuned-Memory-Tiering","date":1742467922,"author":"Michael Larabel","guid":765,"unread":true,"content":"<article>Linux developer SeongJae Park has posted a set of patches for the Linux kernel's wonderful DAMON code to provide for self-tuned memory tiering that \"just works\" and is racking up some nice performance wins...</article>","contentLength":208,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Google Chrome Replacing FreeType With Rust-Written Skrifa For Font Handling","url":"https://www.phoronix.com/news/Google-Chrome-Going-Skrifa","date":1742467049,"author":"Michael Larabel","guid":764,"unread":true,"content":"<article>The Google Chrome web browser is moving away from the FreeType font rendering library and instead pursuing their Skrifa project that is written in Rust for better memory safety around handling fonts on the web...</article>","contentLength":212,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null},{"title":"Miracle-WM 0.5 Released For Mir-Based Wayland Tiling Window Manager","url":"https://www.phoronix.com/news/Miracle-WM-0.5-Released","date":1742465796,"author":"Michael Larabel","guid":763,"unread":true,"content":"<article>Miracle-WM 0.5 released on Wednesday as their first update of 2025 for this Mir-based Wayland tiling window manager. With this release comes a number of new features and other enhancements...</article>","contentLength":191,"flags":null,"enclosureUrl":"","enclosureMime":"","commentsUrl":null}],"tags":["tech"]}